[{"content":"\r\n\r\nSed是一个很好的文件处理工具，本身是一个管道命令，主要是以行为单位进行处理，可以将数据行进行替换、删除、新增、选取等特定工作，下面先了解一下Sed的用法。\r\n## 用法 ##\r\n### Sed命令行格式\r\n\r\n    sed -$Options '$Features' $File\r\n\r\n### $Options\r\n`-n` ：使用安静(silent)模式。在一般 sed 的用法中，所有来自 STDIN 的数据一般都会被列出到终端上。但如果加上 -n 参数后，则只有经过sed 特殊处理的那一行(或者动作)才会被列出来。  \r\n`-e` ：直接在命令列模式上进行 sed 的动作编辑；  \r\n`-f` ：直接将 sed 的动作写在一个文件内， -f filename 则可以运行 filename 内的 sed 动作；  \r\n`-r` ：sed 的动作支持的是延伸型正规表示法的语法。(默认是基础正规表示法语法)  \r\n`-i` ：直接修改读取的文件内容，而不是输出到终端。  \r\n### 指定行数\r\n不一定要存在指定的行数，一般代表选择进行动作的行数，举例来说，如果我的动作是需要在10到20行之间进行的，则完整代码是`sed -$Options '10,20$Features' $File`\r\n### $Features\r\n`a` ：新增， a 的后面可以接字串，而这些字串会在新的一行出现(目前的下一行)～  \r\n`c` ：取代， c 的后面可以接字串，这些字串可以取代你指定行的所有内容！  \r\n`d` ：删除， 因为是删除啊，所以 d 后面通常不接任何东西；  \r\n`i` ：插入， i 的后面可以接字串，而这些字串会在新的一行出现(目前的上一行)；  \r\n`p` ：列印， 亦即将某个选择的数据印出。通常 p 会与参数 sed -n 一起运行～  \r\n`r` ：引入， sed中的 r 命令会把其后面的任何字符判读为文件名，直到回车符或是单引号；  \r\n`s` ：取代， 可以直接进行取代的工作哩！通常这个 s 的动作可以搭配正规表示法！例如 `sed 's/要被取代的字串/新的字串/g'`就是啦！  \r\n### $File\r\n你要进行动作的文件名例如`98k.txt`\r\n## 实例 ##\r\n假设我们有一文件名为`98k.txt`，内容如下\r\n\r\n    this is a newfile!\r\n    hello world\r\n    please\r\n    asd12\r\n    123asdasd\r\n\r\n### 删除某行\r\n\r\n对`98k.txt`的行进行操作，将操作结果输出到终端（只是做模拟操作，不改动源文件）\r\n\r\n    sed '1d' 98k.txt         # 输出删除第一行后的文件内容\r\n    sed '$d' 98k.txt         # 输出删除最后一行后的文件内容\r\n    sed '1,2d' 98k.txt       # 输出删除第一行到第二行后的文件内容\r\n    sed '2,$d' 98k.txt       # 输出删除第2行到最后1行后的文件内容\r\n\r\n### 显示某行\r\n\r\n    sed -n '1p' 98k.txt           # 只显示文件的第一行 \r\n    sed -n '$p' 98k.txt           # 只显示文件的最后一行\r\n    sed -n '1,2p' 98k.txt         # 只显示文件的第一行到第二行\r\n    sed -n '2,$p' 98k.txt         # 显示文件的第二行到最后一行\r\n\r\n### 使用安静模式进行查询\r\n\r\n    sed -n '/ruby/p' 98k.txt\r\n    输出关键字ruby所在行的内容；其中'/str/p'，str为搜索的文本内容\r\n    sed -n '/\\$/p' 98k.txt\r\n    输出关键字$所在行的内容，使用反斜线\\屏蔽特殊含义\r\n\r\n### 增加一行或多行字符串\r\n\r\n    sed '1a drink tea' 98k.txt            # 在第一行后增加字符串\"drink tea\"\r\n    sed '1,3a drink tea' 98k.txt          # 在第一行到第三行后增加字符串\"drink tea\"\r\n    sed '1a drink tea\\nor coffee' 98k.txt # 在第一行后增加两行，换行使用\\n，可多次使用\\n添加多行\r\n\r\n### 增加另外一个文件的内容\r\n\r\n    sed '1r 1.txt' 98k.txt     # 把1.txt的内容增加到98k.txt的第一行后\r\n\r\n### 替代一行或多行\r\n\r\n    sed '1c Hi' 98k.txt    # 把98k.txt的第一行替换为Hi\r\n    sed '1,2c Hi' 98k.txt  # 把98k.txt的第一行到第二行替换为Hi\r\n\r\n### 替换一行中的某部分字符串\r\n格式：`sed 's/要替换的字符串/新的字符串/g' 98k.txt` （要替换的字符串可以用正则表达式）\r\n\r\n    sed 's/ruby/bird/g' 98k.txt   # 把全部的ruby替换为bird\r\n    sed 's/ruby//g' 98k.txt       # 把全部的ruby替换为空，即删除ruby字符串\r\n\r\n## sed -i 命令详解\r\n`sed -i`是直接对文件进行操作\r\n\r\n    # 对每行匹配到的第一个字符串进行替换\r\n    sed -i 's/原字符串/新字符串/' 98k.txt\r\n    # 对全局匹配上的所有字符串进行替换\r\n    sed -i 's/原字符串/新字符串/g' 98k.txt\r\n    # 删除所有匹配到字符串的行\r\n    sed -i '/匹配字符串/d'  98k.txt\r\n    # 特定字符串的行后插入新行\r\n    sed -i '/特定字符串/a 新行字符串' 98k.txt\r\n    # 特定字符串的行前插入新行\r\n    sed -i '/特定字符串/i 新行字符串' 98k.txt\r\n    # 把匹配行中的某个字符串替换为目标字符串\r\n    sed -i '/匹配字符串/s/源字符串/目标字符串/g' 98k.txt\r\n    # 在文件98k.txt中的末行之后，添加bye\r\n    sed -i '$a bye' 98k.txt\r\n    # 对于文件第3行，把匹配上的所有字符串进行替换\r\n    sed -i '3s/原字符串/新字符串/g' 98k.txt\r\n\r\n## 参考文章 ##\r\nhttps://blog.csdn.net/yjk13703623757/article/details/79548450\r\nhttps://www.cnblogs.com/ev-zhk/p/4277023.html\r\nhttps://www.cnblogs.com/ggjucheng/archive/2013/01/13/2856901.html\r\nhttp://blog.51cto.com/xficc/1621403\r\nhttps://blog.csdn.net/m0_37886429/article/details/79043158\r\nhttps://coolshell.cn/articles/9104.html\r\nhttps://blog.csdn.net/m0_37886429/article/details/79034190\r\nhttps://blog.csdn.net/u011046042/article/details/76211065\r\nhttps://blog.csdn.net/imfinger/article/details/6540345","cover":"https://i.loli.net/2018/05/27/5b0a95350a6ef.jpg","link":"sed一些常用的命令详解.html","preview":"\u003cp\u003eSed是一个很好的文件处理工具，本身是一个管道命令，主要是以行为单位进行处理，可以将数据行进行替换、删除、新增、选取等特定工作，下面先了解一下Sed的用法。\u003c/p\u003e\n","title":"Sed:一些常用的命令详解"},{"content":"\r\n\r\n如果系统中有一些配置文件在服务器上做了配置修改,然后后续开发又新添加一些配置项的时候,发布这个配置文件就会发生代码冲突:\r\n\r\n    error: Your local changes to the following files would be overwritten by merge:\r\n            protected/config/main.php\r\n    Please, commit your changes or stash them before you can merge.\r\n\r\n如果希望保留生产服务器上所做的改动,仅仅并入新配置项, 处理方法如下:\r\n\r\n    git stash\r\n    git pull\r\n    git stash pop\r\n\r\n然后可以使用`git diff -w +文件名`来确认代码自动合并的情况.\r\n\r\n反过来,如果希望用代码库中的文件完全覆盖本地工作版本. 方法如下:\r\n\r\n    git reset --hard\r\n    git pull\r\n\r\n其中git reset是针对版本,如果想针对文件回退本地修改,使用\r\n\r\n    git checkout HEAD file/to/restore","cover":"https://i.loli.net/2018/05/27/5b0a9430b6b8a.jpg","link":"git代码冲突常见解决方法.html","preview":"\u003cp\u003e如果系统中有一些配置文件在服务器上做了配置修改,然后后续开发又新添加一些配置项的时候,发布这个配置文件就会发生代码冲突，我们该怎么办呢？\u003c/p\u003e\n","title":"Git:代码冲突常见解决方法"},{"content":"\r\n\r\n## 缘起\r\n一直在用老毛子Padavan固件，然而近期有一个需要在外网访问内网某资源的需求，然后看到老毛子固件集成了Ngrok，然后使用小宝的一键安装搞半天还是没成，一怒之下去各种找替代Ngrok的方案。一不小心在GitHub上找到一个小清新，那就是Frp([https://github.com/fatedier/frp](https://github.com/fatedier/frp))作者也是因为受不了Ngrok，然后自己整了这个方案。\r\n## Frp方案优势\r\n\r\n 1. 作者已经编译了各平台的二进制包，无需自己编译。\r\n 2. 配置简单，只有一个主配置文件，并且服务端配好后其实可以不用再上去配了。\r\n 3. 不占用服务端80端口，服务器还是可以起Nginx对外服务的。\r\n 4. 支持转发TCP，HTTP，支持SSH。\r\n\r\n不夸了，各位自己看作者的帮助就好，中文帮助在此：https://github.com/fatedier/frp/blob/master/README_zh.md\r\n### 服务端：\r\n最新版本下载地址：https://github.com/fatedier/frp/releases  \r\n我们以v0.16.1版本在一台装有Debian8 x64系统的VPS为例。\r\n\r\n首先拉取Frp v0.16.1版本的压缩包\r\n``` lsl\r\nwget https://github.com/fatedier/frp/releases/download/v0.16.1/frp_0.16.1_linux_amd64.tar.gz\r\n```\r\n然后解压\r\n``` lsl\r\ntar zxvf frp_0.16.1_linux_amd64.tar.gz\r\n```\r\n修改服务端配置文件\r\n``` lsl\r\nvi /root/frp_0.16.1_linux_amd64/frps.ini\r\n```\r\n按下i进入编辑模式，清空所有内容，键入以下内容（这是我自用的配置文件，可参考注释进行自定义。）\r\n``` ini\r\n[common]\r\nbind_port = 7000\r\n#Web服务监听端口\r\nvhost_http_port = 80\r\nvhost_https_port = 443\r\n#与客户端通讯的密匙\r\nprivilege_token = Moexin\r\n#连接池上限\r\nmax_pool_count = 50\r\nmax_ports_per_client = 0\r\n#超时时间\r\nauthentication_timeout = 900\r\n#TCP多路复用\r\ntcp_mux = true\r\n#仪表盘\r\ndashboard_port = 10086\r\ndashboard_user = admin\r\ndashboard_pwd = admin\r\n#底层通信可选KCP协议\r\n#kcp_bind_port = 7000\r\n#bind_udp_port = 7001\r\n#端口白名单\r\n#privilege_allow_ports = 22,80,443,50000-60000\r\n#错误日志(可选)\r\n#log_file = ./frps.log\r\n#log_level = info\r\n#log_max_days = 3\r\n```\r\n进入Frp工作目录\r\n``` lsl\r\ncd /root/frp_0.16.1_linux_amd64\r\n```\r\n启动Frp\r\n``` jboss-cli\r\n./frps -c ./frps.ini\u0026\r\n```\r\n建议将Frp服务端程序加入开机自启动，这样就不用每次重启后都需要手动打开Frp服务端\r\n``` maxima\r\nvi /etc/rc.local\r\n```\r\n在exit 0之前插入即可\r\n``` jboss-cli\r\ncd /root/frp_0.16.1_linux_amd64 \u0026\u0026 ./frps -c ./frps.ini\u0026\r\n```\r\n### 客户端：\r\n首先点一下更新按钮更新客户端文件\r\n然后把图中蓝色部分替换成以下代码\r\n![把图中蓝色部分替换成以下代码](https://i.loli.net/2018/04/11/5ace117d78878.png)\r\n``` ini\r\n[common]\r\nserver_addr = Frp服务端IP（服务器IP，例：144.172.85.185）\r\nserver_port = 7000\r\nprivilege_token = Moexin\r\ntcp_mux = true\r\n[ssh]\r\ntype = tcp\r\nlocal_port = 22\r\nremote_port = 6000\r\nuse_encryption = true\r\nuse_compression = true\r\n[web]\r\nprivilege_mode = true\r\nremote_port = 6000\r\ntype = http\r\nlocal_ip = 内网IP（例：192.168.123.1）\r\nlocal_port = 888\r\nuse_gzip = true\r\n#subdomain = test\r\ncustom_domains = 公网访问的域名(例：98k.li)\r\n#host_header_rewrite = \r\n#log_file = /dev/null\r\n#log_level = info\r\n#log_max_days = 3\r\n```\r\n最后开启`启用 frp 内网穿透` `启用 frpc 客户端`并应用本页面设置即可完成内网穿透，尽情享用吧~","cover":"https://i.loli.net/2018/04/11/5ace14230a5dd.png","link":"老毛子padavan固件使用frp进行内网穿透实战教程.html","preview":"\u003cp\u003eFrp 是一个可用于内网穿透的高性能的反向代理应用，支持 TCP, UDP, HTTP, HTTPS 协议。\u003c/p\u003e\n","title":"老毛子Padavan固件使用Frp进行内网穿透实战教程"},{"content":"\r\n\r\n## 前言\r\n最近捯饬了个 Typecho 的博客，用惯了 WordPress，顿时被 Typecho 的简洁所吸引。\r\n\r\n两者都是动态博客，却是一繁一简，风格截然不同。WordPress 功能丰富，相对的体系也比较庞大；而 Typecho 却是极为精简，同时必要的功能一个不缺，倒也令人眼前一亮。\r\n\r\n本文就介绍下如何在自己的 VPS 上搭建 Typecho 博客。从域名和 VPS 的购买，到最后完成博客搭建发布文章全部包括，零基础教程。\r\n## 简介\r\nTypecho 是国内开发者开发的一款开源免费的动态博客程序，可以运行在基于 PHP 环境的各种平台上。\r\n\r\n - 官网：[Typecho Official Site][1]\r\n - GitHub：[typecho: A PHP Blogging Platform.][2]\r\n\r\n相比于同为动态博客并且广为人知的 WordPress 来说，Typecho 的一大特点就是 “精简”。全部文件不足 500KB，但却也实现了完整的主题和插件支持。博客程序很轻量，资源占用也很低，原生支持 Markdown 语法。属于省心并且简洁的博客类型。\r\n# 注册域名\r\n域名推荐在 Namesilo 购买，价格便宜，同时赠送永久免费的隐私保护。\r\n\r\n**官网：**[Namesilo][3]\r\n\r\n**首先：** 注册账户。注册信息建议如实填写，国家选择中国，并勾选 “Keep my information private” 默认使用隐私保护。\r\n\r\n**然后：** 搜索想要注册的域名，进行购买。\r\n\r\n设置域名续费规则、注册时长等。在 “Have a Coupon……” 处输入优惠码 okoff 或者 go2think ，点击 “Submit” 应用，优惠一美元。\r\n\r\n完成后点击 “CONTINUE” 付款，支持支付宝和 Paypal。\r\n![Namesilo][4]\r\n**详细教程：**[Namesilo 域名购买及使用教程][5]\r\n# 购买 VPS\r\nVPS 我使用的 Vultr，全 SSD 硬盘，按时间计费，后台管理也很方便。打开网站使用邮箱注册账户，并进入 “Billing” 页面充值，支持支付宝和 Paypal。\r\n\r\n**官网：**[Vultr][6]\r\n\r\n然后点击右上脚的蓝色 “+” 创建 VPS。节点选择东京、洛杉矶、纽约等都可以；系统 CentOS 7x64；套餐按需要选择，最低 $5/mo；其它默认即可。“Deploy Now” 开始创建。\r\n![创建VPS][7]\r\n## 域名解析\r\n进入 Namesilo，“Manage My Domains”，编辑 DNS。\r\n![编辑DNS][8]\r\n一般设置两条记录就够了，即将 hello.com 和 www.hello.com 指向 VPS 的 IP 地址。\r\n![添加记录][9]\r\n## 连接 VPS\r\n点击 “Manage” 查看连接信息：IP 地址，用户名，密码。\r\n![查看链接信息][10]\r\n使用 SSH 工具连接我们的 VPS，Windows 推荐 xshell，Mac 可使用自带的终端。\r\n\r\nXshell 网盘链接：[https://share.weiyun.com/56Pu8If][11]\r\n## Windows\r\n打开XShell。\r\n\r\n点击 “文件” —\u003e “新建” —\u003e “连接”，输入 “名称” 和 “主机” （即VPS IP）。\r\n![新建会话][12]\r\n点击 “用户身份验证”，输入用户名（默认root）和密码。确认。\r\n![添加用户身份验证][13]\r\n连接 VPS，接受并保存密匙。\r\n![连接](https://i.loli.net/2018/03/25/5ab77c6f20d7f.jpg)\r\n![接受并保存](https://i.loli.net/2018/03/25/5ab77c75bec84.jpg)\r\n出现 `root@vultr:~#` 即连接成功，可以输入代码了进行操作了。\r\n![连接成功](https://i.loli.net/2018/03/25/5ab77c7a506a5.jpg)\r\n## Mac\r\n打开终端，输入以下代码登录 VPS，其中 root 即用户名，将 ip 更改为 VPS 的 IP 地址，回车。\r\n```bash\r\nssh root@ip\r\n```\r\n输入 `yes` 确认，粘贴密码，回车。需要提醒的是，密码输入时并不会显示出来，直接复制粘贴，回车即可。出现 `root@vultr:~#` 即连接成功。\r\n![Mac连接成功](https://i.loli.net/2018/03/25/5ab77d75dfbfe.jpg)\r\n# Typecho 搭建\r\n## 环境安装\r\n安装宝塔 Linux 面板，复制安装代码到 Xshell 回车运行。\r\n```bash\r\nyum install -y wget \u0026\u0026 wget -O install.sh http://download.bt.cn/install/install.sh \u0026\u0026 sh install.sh\r\n```\r\n中间需要进行 “确认”，输入 Y 回车即可。安装完成会显示登录信息，包括面板地址、用户名和密码。\r\n![BT面板安装成功](https://i.loli.net/2018/03/25/5ab77e624c463.jpg)\r\n打开浏览器进入面板，会提示安装 LNMP。PHP 版本改为 7.1，点击 “一键安装”，等待网站环境安装完成。\r\n![安装套件](https://i.loli.net/2018/03/25/5ab77e9b99871.jpg)\r\n## 创建网站\r\n添加网站，并同时新建数据库。**记录下数据库的用户名** 和密码。\r\n![创建网站](https://i.loli.net/2018/03/25/5ab77ee35d31b.jpg)\r\n网站创建后，进入数据库，查看并记录 **root 密码** 备用。\r\n## 安装 Typecho\r\n进入 [Typecho][14] 官网，下载安装包。建议下载正式版。\r\n\r\n打开网站管理页面，进入网站目录，把该目录中的现有文件全部删除。然后把 Typecho 文件压缩包上传到网站目录中并解压，解压后出现 build 文件夹。\r\n![进入网站目录](https://i.loli.net/2018/03/25/5ab77f62beb07.jpg)\r\n把 build 文件夹中的文件全部复制到 hello.com 文件夹中，然后删除 build 文件夹 和 Typecho 压缩包。\r\n![正确使用Typecho 压缩包][15]\r\n浏览器访问 hello.com/install.php，按提示完成 Typecho 配置。\r\n![填写配置](https://i.loli.net/2018/03/25/5ab7803427ffa.jpg)\r\n![安装成功](https://i.loli.net/2018/03/25/5ab78034145d9.jpg)\r\n![博客界面](https://i.loli.net/2018/03/25/5ab7803426833.jpg)\r\n**Typecho 博客搭建完成！**\r\n# 使用\r\n进入网站后台，控制台、撰写、管理、设置，四个大选项简单明了。\r\n![四大选项](https://i.loli.net/2018/03/25/5ab780aeee148.jpg)\r\n## 发布文章\r\n点击 “撰写文章”，即可使用 Markdown 语法撰写、发布博文。\r\n\r\n预览选项，可以查看渲染后的文章效果。图片可以通过 “附件” 上传，并在文章中引用，或者使用图床。\r\n![撰写文章](https://i.loli.net/2018/03/25/5ab780e4821f6.jpg)\r\n## 站点管理\r\n站点的管理选项集中在 “管理” 和 “设置”，可以自由的添加、删除标签、分类、文件等，修改站点名称、描述，设置评论规则等。大家一看就知道了，这里不再逐个说明。\r\n## 主题 \u0026 插件\r\nTypecho 博客本身不带主题/插件商店，因此主题和插件需要自己到论坛、网上去找，下载后上传到网站目录的相应文件夹中，再到网站后台启用即可。\r\n\r\n - **插件位置：**网站目录/usr/plugins\r\n - **主题位置：**网站目录/usr/themes\r\n - **附件位置：**网站目录/usr/uploads\r\n\r\n# 结语\r\nTypecho 博客十分简洁清爽，相比于 WordPress 干练了不少，程序只有 500KB 不到，但是必要的功能也一个不缺；而比起 Hexo 等纯静态博客又方便了很多，只要有网络，随时随地都可以发文。\r\n\r\n如果喜欢简洁的风格，或者用惯了其它博客程序想要换个口味，不妨试试 Typecho。\r\n(๑•̀ㅂ•́) ✧\r\n \r\n  [1]: http://typecho.org\r\n  [2]: https://github.com/typecho/typecho\r\n  [3]: https://www.namesilo.com\r\n  [4]: https://i.loli.net/2018/03/25/5ab77939239aa.jpg\r\n  [5]: https://zhuanlan.zhihu.com/p/33921436\r\n  [6]: https://www.vultr.com/?ref=7155030\r\n  [7]: https://i.loli.net/2018/03/25/5ab771fa86a2a.gif\r\n  [8]: https://i.loli.net/2018/03/25/5ab779f90c527.jpg\r\n  [9]: https://i.loli.net/2018/03/25/5ab77a3399c27.jpg\r\n  [10]: https://i.loli.net/2018/03/25/5ab77abe55006.png\r\n  [11]: https://share.weiyun.com/56Pu8If\r\n  [12]: https://i.loli.net/2018/03/25/5ab77bf507b1a.jpg\r\n  [13]: https://i.loli.net/2018/03/25/5ab77c285bd6d.jpg\r\n  [14]: http://typecho.org\r\n  [15]: https://i.loli.net/2018/03/25/5ab782963a5a9.gif","cover":"https://i.loli.net/2018/03/22/5ab3796db6706.png","link":"30分钟搭建 typecho 个人博客教程.html","preview":"\u003cp\u003e如何在自己的 VPS 上搭建 Typecho 博客。从域名和 VPS 的购买，到最后完成博客搭建发布文章全部包括，零基础教程。\u003c/p\u003e\n","title":"30分钟搭建 Typecho 个人博客教程"},{"content":"\r\n\r\n## CentOS系统\r\n```bash\r\nyum install curl -y \u0026\u0026 curl -O https://raw.githubusercontent.com/1715173329/v2ray-onekey/master/v2ray-go.sh \u0026\u0026 bash v2ray-go.sh\r\n```\r\n## Debian\\Ubuntu系统\r\n```bash\r\napt-get install -y curl \u0026\u0026 curl -O https://raw.githubusercontent.com/1715173329/v2ray-onekey/master/v2ray-go.sh \u0026\u0026 bash v2ray-go.sh\r\n```","cover":"https://i.loli.net/2018/03/22/5ab377493d4be.jpg","link":"v2ray easy to use - v2ray 一键安装脚本 \u0026 管理脚本.html","preview":"\u003cp\u003eV2Ray是一个优秀的开源网络代理工具，可以帮助你畅爽体验互联网，目前已经全平台支持Windows、Mac、Android、IOS、Linux等操作系统的使用。\u003c/p\u003e\n","title":"V2Ray Easy To Use - V2Ray 一键安装脚本 \u0026 管理脚本"},{"content":"\r\n\r\n[![↑↑↑点我部署↑↑↑](https://www.herokucdn.com/deploy/button.png)](https://heroku.com/deploy?template=https://github.com/Moexin/v2ray-heroku)\r\n\r\n# 配置说明：\r\n#### 别名(Remarks)：任意字符\r\n#### 地址(Address)：您的app地址\r\n#### 端口(Port):443\r\n#### 用户ID(ID):您设置的UUID\r\n#### 额外ID(AlterID):100\r\n#### 加密方式(Security)：none\r\n#### 传输协议(Network）：ws\r\n#### 伪装类型(Type）：none\r\n#### 伪装域名/其他项：/fuckgfw_gfwmotherfuckingboom\r\n#### 底层传输安全(TLS)：tls","cover":"https://i.loli.net/2018/03/22/5ab377493d4be.jpg","link":"v2ray easy to heroku - 一键部署 v2ray 到 heroku.html","preview":"\u003cp\u003eV2Ray是一个优秀的开源网络代理工具，可以帮助你畅爽体验互联网，目前已经全平台支持Windows、Mac、Android、IOS、Linux等操作系统的使用。\u003c/p\u003e\n","title":"V2Ray Easy To Heroku - 一键部署 V2Ray 到 Heroku"},{"content":"\r\n\r\n## CentOS系统\r\n```bash\r\nwget https://raw.githubusercontent.com/Moexin/Python3.6.4-OneKey/master/CentOS-Python3.6.4.sh \u0026\u0026 sh CentOS-Python3.6.4.sh\r\n```\r\n## Debian\\Ubuntu系统\r\n```bash\r\nwget https://raw.githubusercontent.com/Moexin/Python3.6.4-OneKey/master/Debian-Python3.6.4.sh \u0026\u0026 sh Debian-Python3.6.4.sh\r\n```","cover":"https://i.loli.net/2018/03/22/5ab3869937e26.png","link":"linux下一键安装python3.6.4脚本.html","preview":"\u003cp\u003e一个自己纯手打的一键脚本，可能会有诸多BUG喵~\u003c/p\u003e\n","title":"Linux下一键安装Python3.6.4脚本"},{"content":"\r\n\r\n# V2RAY 基于 NGINX 的 VMESS+WS+TLS+Website(Use Host) \r\n### HTTP Header 分流 随机生成 Header，自带 Website 伪装站点 http 强制跳转 https，支持ssl非443端口，自带Rinetd BBR加速 支持OpenVZ，自动生成客户端config.json配置文件 web在线下载，重装自动清除残余的Http服务，每天自动升级最新的V2ray内核，支持cdn嵌套，自动续签ssl证书。\r\n\r\n使用：1.解析好域名； 2.运行一键安装脚本；\r\n```\r\nwget -N https://raw.githubusercontent.com/dylanbai8/V2Ray_ws-tls_Website_onekey/master/v.sh \u0026\u0026 bash v.sh\r\n```\r\n[新手请使用 Debian8 纯净系统安装]\r\n\r\n备用1：一键更换新的 UUID\r\n```\r\nbash v.sh -n\r\n```\r\n\r\n备用2：一键删除服务器中储存的客户端 config.json 配置文件，防止 Website 被抓取。\r\n```\r\nbash v.sh -r\r\n```\r\n\r\n共享你的 V2ray 账号\r\n```\r\nbash v.sh -s\r\n\r\n开启共享模式后，每周一自动更换 UUID 并推送至 Website 伪装站点首页。\r\n为防止被恶意抓取，该模式下不提供客户端 config.json 文件下载。\r\n```\r\n\r\n注册免费域名\r\n```\r\nhttp://www.freenom.com\r\n需更换ns服务器，默认ns服务器在国内很不稳定。\r\n```\r\n\r\n嵌套 cloudflare (fullSSL+CDN) 节省资源 人人有责 如果你的ip没有墙 请勿开启\r\n```\r\n# 提前准备\r\n购买域名、VPS；\r\n注册cloudflare，提前24小时配置NS并解析域名。\r\n确保所解析的域名Status位置关闭默认的cdn加速，变为灰色云朵状态。\r\n\r\n# 开启 cloudflare (fullssl+cdn)\r\n安装完毕一键脚本，并测试V2ray可以正常使用之后。\r\n注意：在此步骤之前，勿必保持所解析的域名Status处为灰色云朵（及关闭cdn）。重做系统或重新安装时也勿必关闭此处设置。\r\n\r\n1.开启全程ssl加密\r\n在 Cloudflare 的 Crypto 那里设置 SSL 为 Full\r\n\r\n2.开启cdn隐藏ip地址\r\n返回 Status 点击灰色云朵图标 将其变成 橙色云朵状态 开启cdn，即是 DNS and HTTP proxy(CDN)\r\n\r\n其它配置项尽量保持默认，这样有助于你排错。\r\n```\r\n\r\n提示：重装系统（Debian 8）能解决 100% 的安装错误，HTTP header 分流客户端配置容易出错认真检查配置信息。\r\n\r\n### 申明：\r\n\r\n此为 wulabing/V2Ray_ws-tls_bash_onekey 的另一个分歧版本\r\n\r\n源作者网址：https://github.com/wulabing/V2Ray_ws-tls_bash_onekey\r\n```\r\n修改内容如下：\r\n1.修改路径分流为 HTTP Header 分流（随机生成 Header）；\r\n2.增加 Website 伪装站点。https://你的域名，（http 强制跳转 https 支持非443端口）；\r\n3.增加 Rinetd BBR 端口加速（支持 OpenVZ）；\r\n4.自动清除残余的 Http 服务（某些系统自带的 Apache2 以及重装脚本时需要清除的 Nginx ）；\r\n5.每天凌晨自动升级 V2ray 最新内核，每天自动重启vps（减少小内存主机kill进程的几率）；\r\n6.增加 自动生成客户端 config.json 配置文件（Website 随机路径 在线下载，支持 v2rayNG 从 url 导入）；\r\n7.增加 一键删除客户端 config.json 配置文件，防止 Website 被抓取；\r\n8.增加 一键更换新的 UUID；\r\n9.增加 客户端 Kitsunebi ShadowRay v2rayNG BifrostV 的 http header 分流配置提示。\r\n10.增加 V2ray 账号共享功能。\r\n11.增加 脚本重装判断 自动跳过 ssl 重复申请。\r\n```\r\n### 其它与原版一致，详细说明请步移 https://github.com/wulabing/V2Ray_ws-tls_bash_onekey\r\n","cover":"https://i.loli.net/2018/03/22/5ab377493d4be.jpg","link":"v2ray 基于 nginx 的 vmess+ws+tls+website(use host).html","preview":"\u003cp\u003eHTTP Header 分流，随机生成Header，自带 Website 伪装站点 http 强制跳转 https，自带 Rinetd BBR 加速，支持OpenVZ，自动生成客户端 config.json 配置文件，重装自动清除残余的 Http 服务，每天自动升级最新的 V2ray 内核。\u003c/p\u003e\n","title":"V2Ray 基于 Nginx 的 VMESS+WS+TLS+Website(Use Host)"},{"content":"\r\n\r\n更新预告 V4.0（时间未定）：下一个大版本更新将会把 h5ai（[demo](https://larsjung.de/h5ai/demo/)）与 V2ray 结合接起来,同时不会取消当前的计算器伪装，由用户自行选择 伪装页面\r\n## V3.2 版本更新虽然对Nginx中添加了http2和TLS1.3的配置信息，但是没什么卵用。因为tls1.3需要openssl版本至少为1.1.1（目前不是stable版本），http2要求openssl至少为1.0.2（db8默认是1.0.1，db9默认可支持），并且golang目前尚未支持TLS1.3，所以此变更只是给用户点心理安慰，访问网页还是走的TLS1.2 \r\n* h5ai is a modern file indexer for HTTP web servers with focus on your files. Directories are displayed in a appealing way and browsing them is enhanced by different views, a breadcrumb and a tree overview. Initially h5ai was an acronym for HTML5 Apache Index but now it supports other web servers too.\r\n* V2Ray是一个优秀的开源网络代理工具，可以帮助你畅爽体验互联网，目前已经全平台支持Windows、Mac、Android、IOS、Linux等操作系统的使用。\r\n* 本脚本的另一个分支版本（Use Host）地址： https://github.com/dylanbai8/V2Ray_ws-tls_Website_onekey 请根据需求进行选择， 感谢作者 dylanbai8 的改进与维护\r\n* 本脚本为一键完全配置脚本，在所有流程正常运行完毕后，直接按照输出结果设置客户端即可使用\r\n* 已安装的用户，当出现无法连接的情况时，请用户根据该文档更新 V2ray core \r\n* 请注意：我们依然强烈建议你全方面的了解整个程序的工作流程及原理\r\n\r\n## 目前支持Debian 8+ / Ubuntu 16.04+ / Centos7\r\n## 如果你选择使用 V2ray，强烈建议你关闭并删除所有的 shadowsocksR 服务端，仅使用标准的 V2ray 三件套（原因请查看 Wiki ）\r\n* 本脚本默认安装最新版本的V2ray core\r\n* 本脚本的第一批用户安装的内核为 V2ray core 3.6 版本，请该内核版本的用户，根据下文及时更新内核版本。\r\n* V2ray core 目前最新版本为 3.14\r\n* 由于新版本增加了 web 伪装，因此强烈建议使用默认的443端口作为连接端口\r\n* **感谢作者 dunizb 的自用 开源 html 计算器源码 项目地址 https://github.com/dunizb/sCalc**\r\n## V2ray core 更新方式\r\n执行：\r\n`bash \u003c(curl -L -s https://install.direct/go.sh)`\r\n\r\n（ 来源参考 ：[V2ray官方说明](https://www.v2ray.com/chapter_00/install.html)）\r\n* 如果为最新版本，会输出提示并停止安装。否则会自动更新\r\n* 未来会将相关内容集成到本脚本中并进行交互式操作更新\r\n\r\n## 注意事项\r\n* 推荐在纯净环境下使用本脚本，如果你是新手，请不要使用Centos系统。\r\n* 在尝试本脚本确实可用之前，请不要将本程序应用于生产环境中。\r\n* 该程序依赖 Nginx 实现相关功能，请使用 [LNMP](https://lnmp.org) 或其他类似携带 Nginx 脚本安装过 Nginx 的用户特别留意，使用本脚本可能会导致无法预知的错误（未测试，若存在，后续版本可能会处理本问题）。\r\n* V2Ray 的部分功能依赖于系统时间，请确保您使用V2RAY程序的系统 UTC 时间误差在三分钟之内，时区无关。\r\n* 本 bash 依赖于 [V2ray 官方安装脚本](https://install.direct/go.sh) 及 [acme.sh](https://github.com/Neilpang/acme.sh) 工作。\r\n* Centos 系统用户请预先在防火墙中放行程序相关端口（默认：80，443）\r\n## 准备工作\r\n* 准备一个域名，并将A记录添加好。\r\n* [V2ray官方说明](https://www.v2ray.com/)，了解 TLS WebSocket 及 V2ray 相关信息\r\n* 安装好 git\r\n## 安装方式\r\n```\r\ngit clone https://github.com/wulabing/V2Ray_ws-tls_bash_onekey.git temp \u0026\u0026 cd temp \u0026\u0026 bash install.sh | tee v2ray_ins.log\r\n```\r\n## 启动方式\r\n\r\n启动 V2ray：`systemctl start v2ray`\r\n\r\n启动 Nginx：`systemctl start nginx`\r\n\r\n（其他的应该不用我多说了吧 嘿嘿嘿）\r\n\r\n\r\n### 测试说明\r\n* V3.1 版本在 Debian 8 / Debian 9 / Ubuntu 16.04 / Centos 7(防火墙着实又坑了我一把) 上进行过测试。\r\n\r\n* 请携带 v2ray_ins.log 文件内容进行反馈\r\n### 更新说明\r\n## 2018-04-03\r\nV3.2(Beta)\r\n* Nginx 版本更新至mainline版本\r\n* Nginx 配置中添加 TLS1.3 http2\r\n## 2018-03-26\r\nV3.1(Beta)\r\n* 1.去除无关的依赖\r\n* 2.安装顺序变更，SSL生成放在程序末尾\r\n* 3.NGINX 安装版本统一为最新 stable 版本（为将来可能进行的 http2 及 tls1.3 适配做好准备,debian 源默认 NGINX 版本过低不支持 http2）\r\n## 2018-03-18\r\nV3.0(Stable)\r\n* 1.修复 Path 分流时访问特定的伪装 Path 时出现的 Bad Request 问题 （统一为404 Not Found）\r\n## 2018-03-10\r\nV3.0(beta)\r\n* 1.部分功能进行代码重构\r\n* 2.添加了 301 重定向，即 http 强制跳转 https \r\n* 3.添加了 页面伪装（一个计算器程序）\r\n* 4.伪装path 从原来的/ray/ 变为 随机生成\r\n## 2018-03-05\r\nV2.1.1(stable)\r\n* 1.变更 检测到端口占用后，尝试自动kill相关进程\r\n* 2.尝试修复 GCE 默认纯净模板80端口占用问题（等待更多反馈）\r\n## 2018-02-04\r\nV2.1.1(stable)\r\n* 1.变更 local_ip 判断方式，从 本地网卡获取 变更至 命令获取 公网IP。\r\n* 1.修复 域名dns解析IP 与 本机IP 不匹配 误报问题\r\n## 2018-01-28\r\nv2.1.1(stable)\r\n* 1.修复 缺乏 lsof 依赖导致的端口占用判断异常问题\r\n## 2018-01-27\r\nv2.1.1(stable）\r\n* 1.修复 部分机型因缺乏 crontab （计划任务）依赖导致的安装失败问题\r\n* 2.完善 端口占用 判断\r\n## 2017-12-06\r\nV2.1（stable）\r\n* 1.修复 Centos7 找不到 Nginx 安装包的问题\r\n* 2.完善 SElinux 配置过程提醒标识\r\n\r\nV2.0（stable）  \r\n* 1.增加 Centos7 系统支持  \r\n* 2.增加 自定义端口 和 自定义alterID  \r\n* 3.完善 安装所需依赖  \r\n* 4.修复 Ubuntu 系列系统版本判断异常导致的安装中断问题  \r\n* 5.修复 bug  \r\n\r\nV1.02（beta）  \r\n* 1.增加 系统判定，目前打算仅支持带systemd的较新主流开发版系统  \r\n* 2.本机 IP 获取方式重构  \r\n\r\n## 2017-12-05\r\n\r\nV1.01（beta）  \r\n* 1.完善 支持 Debian9  \r\n* 2.修复 由于 Debian9 默认未安装 net-tools 导致的本机ip判定错误  \r\n* 3.修复 bc 安装问题  \r\n* 4.增加 ip 判定不一致时继续安装的选项（由于某些vps情况比较特殊，判定到内网IP或本身网卡信息，或公网ip与服务期内信息不一致等情况）\r\n\r\nV1.0（beta）  \r\n* 1.目前仅支持 Debian 8+ / Ubuntu 16.04+   \r\n* 2.逐渐完善中  \r\n","cover":"https://i.loli.net/2018/03/22/5ab377493d4be.jpg","link":"v2ray 基于 nginx 的 vmess+ws+tls 一键安装脚本 （use path）.html","preview":"\u003cp\u003eV2Ray是一个优秀的开源网络代理工具，可以帮助你畅爽体验互联网，目前已经全平台支持Windows、Mac、Android、IOS、Linux等操作系统的使用。\u003c/p\u003e\n","title":"V2Ray 基于 Nginx 的 VMESS+WS+TLS 一键安装脚本 （Use Path）"},{"content":"\r\n\r\n## 介绍 ##\r\n**对于出口带宽，我们常常采用BBR，锐速等TCP加速软件来争夺带宽提高自己的速度。**\r\n\r\n但是原版的BBR并没有太多**侵略性**，在这个人人都用TCP加速的大环境下，BBR的加速功效就略显不足了。loc的大佬专门改进了下这个BBR，使BBR具有了侵略性。\r\n\r\n最近我也连续购买了几个服务器，每次都手动搭建，感觉到十分麻烦，干脆写个脚本吧。由于是第一次接触shell脚本这一方面的内容，写起来感觉十分吃力，且与一般的高级语言语法~~差别有些大~~。所有有些不足的地方欢迎向原作者反映帮助改善。\r\n\r\n同时也加入了**锐速一键换内核，锐速一键安装，自动根据vps情况优化锐速参数，一键优化内核参数。**\r\n\r\n也可以在锐速，BBR，BBR魔改版中自由切换。\r\n## 安装 ##\r\n**支持系统：**Centos 6+/Debian 7+/Ubuntu 14+，BBR魔改版不支持Debian 7。\r\n**注意：**该脚本在Vultr各个系统均测试通过，如果期间有出现任何问题，可向原作者反映帮助改善。\r\n运行以下命令：\r\n```\r\nwget -N --no-check-certificate \"https://raw.githubusercontent.com/chiakge/Linux-NetSpeed/master/tcp.sh\" \u0026\u0026 chmod +x tcp.sh \u0026\u0026 ./tcp.sh\r\n```\r\n## 说明 ##\r\n使用脚本后会出现如下选项：\r\n![](https://i.loli.net/2018/02/24/5a90e088ea0d9.png)\r\n根据自己需求操作，重启后再使用`./tcp.sh`命令接着操作。\r\n脚本会自动检测安装的情况，请注意脚本菜单下的**状态检测**即可。\r\n如果在删除内核环节出现这样一张图\r\n![](https://i.loli.net/2018/02/24/5a90e10224ca4.png)\r\n注意选择`NO`，然后根据提示重启系统。","cover":"https://i.loli.net/2018/03/22/5ab382b980afc.jpg","link":"bbr+bbr魔改+lotsever(锐速)一键脚本 for centosdebianubuntu.html","preview":"\u003cp\u003e对于出口带宽，我们常常采用BBR，锐速等TCP加速软件来争夺带宽提高自己的速度。但是原版的BBR并没有太多侵略性，在这个人人都用TCP加速的大环境下，BBR的加速功效就略显不足了。loc的大佬专门改进了下这个BBR，使BBR具有了侵略性。\u003c/p\u003e\n","title":"BBR+BBR魔改+Lotsever(锐速)一键脚本 for Centos/Debian/Ubuntu"},{"content":"\r\n\r\n\u003e FinalShell是一体化的的服务器,网络管理软件,不仅是ssh客户端,还是功能强大的开发,运维工具,充分满足开发,运维需求.\r\n\r\n### Windows 版下载地址:\r\nhttp://www.hostbuf.com/downloads/finalshell_install.exe\r\n### Mac 版, Linux 版安装及教程:\r\nhttp://www.hostbuf.com/t/1059.html\r\n### 更新日志:\r\nhttp://www.hostbuf.com/t/989.html\r\n## 主要特性: ##\r\n1. 多平台支持Windows,Mac OS X,Linux\r\n2. 多标签,批量服务器管理.\r\n3. 支持登录Ssh和Windows远程桌面.\r\n4. 漂亮的平滑字体显示,内置100多个配色方案.\r\n5. shell,sftp同屏显示,同步切换目录.\r\n6. 命令自动提示,智能匹配,输入更快捷,方便.\r\n7. sftp支持,通过各种优化技术,加载更快,切换,打开目录无需等待.\r\n8. 服务器网络,性能实时监控,无需安装服务器插件.\r\n9. 内置海外服务器加速,加速远程桌面和ssh连接,操作流畅无卡顿.\r\n10. 双边加速功能,大幅度提高访问服务器速度.\r\n11. 内存,Cpu性能监控,Ping延迟丢包,Trace路由监控.\r\n12. 实时硬盘监控.\r\n13. 进程管理器.\r\n14. 快捷命令面板,可同时显示数十个命令.\r\n15. 内置文本编辑器,支持语法高亮,代码折叠,搜索,替换.\r\n16. ssh和远程桌面均支持代理服务器.\r\n17. 打包传输,自动压缩解压.\r\n18. 免费内网穿透,无需设置路由器,无需公网ip.\r\n\r\n**更多功能会逐步增加, 保持最少每周一次更新的频率, 敬请关注.**\r\n## 界面截图: ##\r\n### Shell 终端\r\n![][1]![][2]![][3]![][4]\r\n### 进程管理器\r\n![][5]\r\n### 主机检测,Ping监控,Trace实时跟踪\r\n![][6]\r\n### 高级网络监控,监控每个进程监听的端口,以及网络连接状态.\r\n![][7]\r\n### 双边加速\r\n![][8]\r\n### 打包传输,自动压缩解压,适合传输大量文件,文件夹和文本文件.\r\n![][9]\r\n\r\n\r\n  [1]: https://i.loli.net/2018/02/23/5a8f7ce2560ce.png\r\n  [2]: https://i.loli.net/2018/02/23/5a8f7ce24818d.png\r\n  [3]: https://i.loli.net/2018/02/23/5a8f7ce247ca8.png\r\n  [4]: https://i.loli.net/2018/02/23/5a8f7ce24e9e2.png\r\n  [5]: https://i.loli.net/2018/02/23/5a8f7ce24e9d1.png\r\n  [6]: https://i.loli.net/2018/02/23/5a8f7ce23987b.png\r\n  [7]: https://i.loli.net/2018/02/23/5a8f7ce239b46.png\r\n  [8]: https://i.loli.net/2018/02/23/5a8f7ce1c6de4.png\r\n  [9]: https://i.loli.net/2018/02/23/5a8f7ce1bf5c9.png","cover":"https://i.loli.net/2018/03/22/5ab380d4d753a.jpg","link":"finalshell 支持多平台  远程桌面加速  多功能优秀ssh客户端.html","preview":"\u003cp\u003eFinalShell是一体化的的服务器,网络管理软件,不仅是ssh客户端,还是功能强大的开发,运维工具,充分满足开发,运维需求.\u003c/p\u003e\n","title":"FinalShell 支持多平台  远程桌面加速  多功能优秀SSH客户端"},{"content":"\r\n\r\n魔改 BBR 一键安装脚本。\r\ntcp_nanqinlang.sh\r\n适用于 Debian 7+ (32/64 bit) 或 CentOS 6/7 (64 bit)\r\n仅适用于 `KVM` \r\n\r\nBBR 当然是家喻户晓了，是出自谷歌员工之手的应用于 Linux 内核中的拥塞控制技术。\r\n为了加速国内与目标服务器间的网络，让 BBR 发挥出更大（暴力）的实力，魔改就此诞生。\r\n## 一键脚本 ##\r\n这个是 `新手简装` 版本，只需 `运行脚本第一项+重启+运行脚本第二项`。一般用户只需使用此版本，并建议使用该版本。此版本不需要编译的过程，直接安装 v4.10.2 内核。\r\n```\r\n# Debian 7+\r\n# fool\r\nwget https://github.com/nanqinlang-tcp/tcp_nanqinlang/releases/download/3.4.2/tcp_nanqinlang-fool-1.2.2.sh\r\nbash tcp_nanqinlang-fool-1.2.2.sh\r\n```\r\n这个是 `进阶` 版本。提供自定义内核版本功能，只建议有`用户自己指定安装的内核的版本`需求的用户使用，例如你想安装 v4.12.10 版本的内核，就需要使用这个版本。\r\n```\r\n# Debian 7+\r\n# pro\r\nwget https://github.com/nanqinlang-tcp/tcp_nanqinlang/releases/download/3.4.2/tcp_nanqinlang-pro-3.4.2.sh\r\nbash tcp_nanqinlang-pro-3.4.2.sh\r\n```\r\n这个是 `CentOS` 平台的版本，尚处于测试版，请勿在重要环境使用。\r\n```\r\n# CentOS 6/7\r\n# only 64 bit\r\n# devel\r\nwget https://raw.githubusercontent.com/nanqinlang-tcp/tcp_nanqinlang/master/General/CentOS/bash/tcp_nanqinlang-1.3.2.sh\r\nbash tcp_nanqinlang-1.3.2.sh\r\n```\r\n项目地址：https://github.com/nanqinlang-tcp/tcp_nanqinlang\r\n## 使用简介 ##\r\n出现四个选项供以选择\r\n![][1]\r\n## 安装内核 ##\r\n用于安装内核\r\n\r\n    必须使用此命令安装内核并重启！\r\n    必须使用此命令安装内核并重启！\r\n    必须使用此命令安装内核并重启！\r\n\r\n别踏马再不换内核就跑来问我怎么报错行不行啊老哥们。。。\r\n\r\n安装内核时，请注意区别：\r\n### Debian\r\n\r\n - 下载内核安装包至 /home/tcp_nanqinlang\r\n - 系统中只会留下新安装的内核，原有的所有内核都会被移除\r\n - 安装的内核版本由你指定，若不确定应输入哪个版本号，直接回车即可\r\n - 指定安装内核版本为 v4.13.x 时，会使用新版本内核适配的源码\r\n - 此命令完成后，系统中会装有 linux-image-版本号-lowlatency linux-headers-版本号-all linux-headers-版本号-lowlatency 三个内核\r\n - 此命令执行完毕后，请确认上述三个内核是否已安装完毕\r\n\r\n### CentOS\r\nCentOS 的脚本，套路和上面 Debian 的大致相当，主要在于以下区别：\r\n\r\n - 不会询问安装版本号，直接安装内核版本 v4.12.10\r\n - 内核安装完成后，系统中会装有 linux-4.12.10 linux-devel-4.12.10 linux-headers-4.12.10 三个内核\r\n - 内核安装完成后，系统中依旧会留有旧版本的 linux-x.xx.xx-ml 内核，这些残留的内核，会在执行第二个选项 “安装并启用算法” 后被移除\r\n\r\n### 内核安装示例\r\n![](https://i.loli.net/2017/11/18/5a0fdf8c021f0.png)\r\n输入你想安装的内核版本\r\n![](https://i.loli.net/2017/11/18/5a0fdfa07bd55.png)\r\n内核安装完成\r\n确认内核更换完成后，重启你的 `vps`\r\n\r\n重启开机后，`再次运行脚本，选择第二项: 安装并开启算法`\r\n\r\n### 安装并开启算法\r\n用于编译并启用魔改 BBR 算法\r\n\r\n运行这个命令后，会提示选择魔改方案：温和模式（gentle mode） 或 暴力模式（violent mode）\r\n温和模式采用较小的数值，更注重 TCP 的公平友好；暴力模式则采用较大数值，增强竞争性\r\n![](https://i.loli.net/2017/11/18/5a0fe024a6ded.png)\r\n选择魔改方案\r\n![](https://i.loli.net/2017/11/18/5a0fe024c0273.png)\r\n启用魔改算法成功\r\n\r\n### 检查运行状态\r\n用于检查 tcp_nanqinlang 是否已被 加载 (installed) 和 启用 (running)\r\n### 卸载\r\n不会删除已安装的内核，仅移除 sysctl.conf 的 tcp_nanqinlang 设置项\r\n然后重启机器后，算法才会停止运行\r\n## 魔改简要 ##\r\n# 以 暴力模式 为例\r\n\r\n    pacing = 6 / 3\r\n    BBR_UNIT = * 6 / 3\r\n    rtt_sec = 5\r\n    rtt_max = 40\r\n    rtt_ms = 100\r\n    cycle_len + 7\r\n\r\n## 注意事项 ##\r\n\r\n 1. 运行脚本时，请使用 bash 命令\r\n 2. 一定要在执行完成 安装内核 并重启 vps 后，才能执行 安装并启用算法\r\n 3. 卸载命令不会改动您的内核\r\n 4. 本文可能过时失效，若需更新，请留言\r\n\r\n\r\n  [1]: https://i.loli.net/2017/11/18/5a0fde37cc914.png","cover":"https://i.loli.net/2017/10/14/59e1ed69aa17a.jpg","link":"魔改 bbr 一键安装脚本 for debian \u0026 centos.html","preview":"\u003cp\u003eBBR 当然是家喻户晓了，是出自谷歌员工之手的应用于 Linux 内核中的拥塞控制技术。为了加速国内与目标服务器间的网络，让 BBR 发挥出更大（暴力）的实力，魔改就此诞生。\u003c/p\u003e\n","title":"魔改 BBR 一键安装脚本 for Debian \u0026 CentOS"},{"content":"\r\n\r\n在你心中是否有个无法被抹去的人，在你的记忆深处是否有个你不愿去触碰的人。每每想起她（他）就疼到无法呼吸，害怕遇见却又在心底期盼。\r\n\r\n当在途中偶尔瞥见相似的身影时，你便会想起你们曾经的点点滴滴。岁月如水，温柔的流淌。但那个人终究不是那个人了，只能带着叹息离开。\r\n\r\n你们或许联系过，但讲的都是彼此的近况，无关痛痒。谁也不愿提起那些个敏感话题。添加过好友，却又随即删掉。或许在某一天，某一个晚上，思恋就像无人打理的野草肆无忌惮的疯长，蔓延。\r\n\r\n厚厚的被子将自己裹得严实却丝毫感觉不到温暖。\r\n\r\n恋爱中最珍贵的纪念物是她（他）留在你身上的印记，如同冰川留给地形的痕迹，那些你为她（他）的改变。\r\n\r\n曾经她说她喜欢短头发的男生。于是我剪掉了自己的刘海，换成了自己不喜欢的短发，后来心理使然又留回了长发。\r\n\r\n再后来，当我们分开后，却喜欢上了曾经不喜欢的短发。从此再未留过长发。时光把你我捉弄。一生爱一次，一次爱一生。说得很浪漫，很完美。但那幸运并不属于我。\r\n\r\n爱情就像一罐蜂蜜与黄莲的混合体，有人专挑甜的，有人专挑苦的，大多数的青春片里的男女主最后都未走到一起。人生如戏，你在台上演，别人在台下看而已。如《平凡的世界》里的孙少平和田晚霞一样，你可以幻想着为她们营造一个美丽的结局。梨花盛开，虫萤嗡嗡，一只只蝴蝶再身旁跳着舞，他们相聚于此，热情相拥，许诺一生。。。但那只不过是自己丰富的幻想，只为了自己能好受一点。\r\n\r\n有多少时光，多少人儿。把自己的热情和青春给了一个人，却把生活与安定给了另一个人。这让我想到了《天堂电影院》。多年之后，他回到那个记忆深处的故乡，找到了她，聊起从前，却发现彼此的离开不过是一场精心安排的误会，他们相拥，接吻，哭泣。但他们无法再续前缘，只因各自拥有的生活。\r\n\r\n最后啊，他只能带着遗憾离开，老去，死去后将这悔恨带进墓地。\r\n\r\n左小慈曾说过：\r\n\r\n\u003e 每个人的心都是一座城，爱可倾城，亦可毁城。我们终其一生所等待的那个倾城人，不是来的太早，便是来的太迟。\r\n\r\n每次将这句话说给刚失恋的人，他们都会低着头，默默叹息。\r\n\r\n是啊！想要在对的时光里遇到对的人是多么的艰难啊。喜欢一个人，就会想起她（他）的微笑，至于她（他）是否明白我微笑的原因，都不在意。\r\n\r\n就像微风拂面，又如阳光温暖。风与太阳跟你一样，不会明白我微笑的原因。我该如何对待风和太阳，就如何对待你。有人曾说过：当爱逐渐死去，人心不过是一座活着的坟墓。\r\n\r\n最后，愿你我都能找到那个想起他是嘴角能够上扬的人吧。\r\n\r\n## 结语 ##\r\n\r\n引用一句电影台词作为结语吧：人生就是一列开往坟墓的列车，路途上会有很多站，很难有人可以自始至终陪着走完。当陪你的人要下车时，即使不舍也该心存感激，然后挥手道别。","cover":"https://i.loli.net/2018/03/22/5ab37d0789b80.jpg","link":"好好珍惜身边的人，有些人一转身或许就真的是一辈子。.html","preview":"\u003cp\u003e在你心中是否有个无法被抹去的人，在你的记忆深处是否有个你不愿去触碰的人。每每想起她（他）就疼到无法呼吸，害怕遇见却又在心底期盼。\u003c/p\u003e\n","title":"好好珍惜身边的人，有些人一转身或许就真的是一辈子。"},{"content":"\r\n\r\n## 系统要求 ##\r\n**CentOS 6+ / Debian 6+ / Ubuntu 14.04 +**\r\n\r\n推荐 **Debian 7 x64**，这个是我一直使用的系统，我的脚本在这个系统上面出错率最低。并且最容易安装锐速（锐速不支持OpenVZ）\r\n\r\nCentOS 7 自带防火墙问题(firewalld)自行解决，其他版本没有做测试。\r\n\r\n\r\n\u003c!--more--\u003e\r\n\r\n\r\n## 脚本特点 ##\r\n所有步骤都可以通过 Shell 脚本中文交互 操作。\r\n\r\n - 支持 限制 用户速度\r\n - 支持 限制 用户设备数\r\n - 支持 限制 用户总流量\r\n - 支持 定时 流量清零\r\n - 支持 显示 当前连接IP\r\n - 支持 显示 SS/SSR连接+二维码\r\n - 支持 一键安装 BBR\r\n - 支持 一键安装 锐速\r\n - 支持 一键安装 LotServer\r\n - 支持 一键封禁 垃圾邮件(SMAP)/BT/PT\r\n\r\n## 安装步骤 ##\r\n**简单的来说，如果你什么都不懂，那么你直接一路回车就可以了！**\r\n\r\n本脚本需要Linux root账户权限才能正常安装运行，所以**如果不是 root账号，请先切换为root，如果是 root账号，那么请跳过！**\r\n\r\n    sudo su\r\n\r\n输入上面代码回车后会提示你输入当前用户的密码，输入并回车后，没有报错就继续下面的步骤安装ShadowsocksR。\r\n\r\n    wget -N --no-check-certificate https://softs.fun/Bash/ssrmu.sh \u0026\u0026 chmod +x ssrmu.sh \u0026\u0026 bash ssrmu.sh\r\n\r\n**备用下载地址（上面的链接无法下载，就用这个）：**\r\n\r\n    wget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubi/doubi/master/ssrmu.sh \u0026\u0026 chmod +x ssrmu.sh \u0026\u0026 bash ssrmu.sh\r\n\r\n下载运行后会提示你输入数字来选择要做什么。\r\n\r\n输入 **1** ，就会开始安装ShadowsocksR服务端，并且会提示你输入Shadowsocks的 **端口/密码/加密方式/ 协议/混淆（混淆和协议是通过输入数字选择的）** 等参数来添加第一个用户。\r\n\r\n\u003e 注意：用户名不支持中文，如果输入中文会一直保存下去！\r\n\r\n## 使用说明 ##\r\n运行脚本\r\n\r\n    bash ssrmu.sh\r\n     \r\n    # 还有一个 运行参数，是用于所有用户流量清零的\r\n    bash ssrmu.sh clearall\r\n    # 不过不需要管这个，可以通过脚本自动化的设置 crontab 定时运行脚本\r\n\r\n输入对应的数字来执行相应的命令。\r\n\r\n     ShadowsocksR MuJSON一键管理脚本 [vX.X.X]\r\n      ---- Toyo | doub.io/ss-jc60 ----\r\n     \r\n      1. 安装 ShadowsocksR\r\n      2. 更新 ShadowsocksR\r\n      3. 卸载 ShadowsocksR\r\n      4. 安装 libsodium(chacha20)\r\n    ————————————\r\n      5. 查看 账号信息\r\n      6. 显示 连接信息\r\n      7. 设置 用户配置\r\n      8. 手动 修改配置\r\n      9. 清零 已用流量\r\n    ————————————\r\n     10. 启动 ShadowsocksR\r\n     11. 停止 ShadowsocksR\r\n     12. 重启 ShadowsocksR\r\n     13. 查看 ShadowsocksR 日志\r\n    ————————————\r\n     14. 其他功能\r\n     15. 升级脚本\r\n     \r\n     当前状态: 已安装 并 已启动\r\n     \r\n    请输入数字 [1-15]：\r\n\r\n\u003e 注意：添加/删除/修改 用户配置后，无需重启ShadowsocksR服务端，ShadowsocksR服务端会定时读取数据库文件内的信息，不过修改 用户配置后，可能要等个十几秒才能应用最新的配置（因为ShadowsocksR不是实时读取数据库的，所以有间隔时间）。\r\n\r\n## 文件位置 ##\r\n**安装目录：**`/usr/local/shadowsocksr`\r\n\r\n**配置文件：**`/usr/local/shadowsocksr/user-config.json`\r\n\r\n**数据文件：**`/usr/local/shadowsocksr/mudb.json`\r\n\r\n\u003e **注意：**ShadowsocksR服务端**不会实时的把流量数据写入 数据库文件**，所以脚本**读取流量信息也不是实时**的！\r\n\r\n## 其他说明 ##\r\nShadowsocksR 安装后，自动设置为 系统服务，所以支持使用服务来启动/停止等操作，同时支持开机启动。\r\n\r\n - **启动 ShadowsocksR：**`/etc/init.d/ssrmu start`\r\n - **停止 ShadowsocksR：**`/etc/init.d/ssrmu stop`\r\n - **重启 ShadowsocksR：**`/etc/init.d/ssrmu restart`\r\n - **查看 ShadowsocksR状态：**`/etc/init.d/ssrmu status`\r\n\r\n**ShadowsocksR 默认支持UDP转发，服务端无需任何设置。**\r\n\r\n本脚本已经集成了 安装/卸载 锐速(ServerSpeeder)/Lotserver，但是是否支持请查看 [Linux支持内核列表][1] 。（锐速、LotServer不支持OpenVZ）\r\n\r\n**注意：本脚本中的 显示链接信息中的** 获取IP归属地功能使用的是 [IPIP.NET 的免费API][2]接口，因为限速所以每秒只能检测一次，同时 [IPIP.NET 的免费API][3]接口并不会保证稳定性，可能什么时候就突然暂时失效了，这是本人不可控的，有条件可以自建API接口。\r\n## ShadowsocksR目前支持的协议和混淆： ##\r\n**协议（Protocol）：**origin，auth_sha1_v4，**auth_aes128_md5**，**auth_aes128_sha1**，**auth_chain_a**，**auth_chain_b**\r\n\r\n**混淆（Obfs）：**plain，http_simple，http_post，random_head，**tls1.2_ticket_auth**，**tls1.2_ticket_fastauth(这个是客户端用的，而服务端需要选择tls1.2_ticket_auth)**\r\n\r\norigin 和 plain 是原版，加粗的是推荐使用的。\r\n\r\n如果你想要使用 **tls1.2_ticket_fastauth** 混淆插件，那么服务端选择 **tls1.2_ticket_auth**，客户端选择 **tls1.2_ticket_fastauth** 即可。\r\n如果服务端 设置混淆参数为：**tls1.2_ticket_auth_compatible (兼容原版)**\r\n那么客户端 可使用的混淆为：**plain / tls1.2_ticket_auth / tls1.2_ticket_fastauth**\r\n**tls1.2_ticket_auth** 与 **tls1.2_ticket_fastauth** 的区别为，后者不会等待服务器回应，所以不会增加延迟。适合于，因为混淆插件增加延迟的原因不得不选择原版混淆 **plain**，但是又因为QOS等因素而处于延迟与干扰/限速等之间抉择的时候，可以选择 **tls1.2_ticket_fastauth** 客户端混淆插件！\r\n\r\n## 升级脚本 ##\r\n升级脚本只需要重新下载脚本文件就可以了，会自动覆盖原文件。\r\n## 定时重启 ##\r\n一些人可能需要定时重启ShadowsocksR服务端来保证稳定性等，所以这里用 crontab 定时。\r\n\r\n    crontab -e\r\n    # 首先打开定时设置，然后会出现文本编辑，按 I键 进入编辑模式，根据需求添加下下面的代码到 这个文本编辑框内！！\r\n    ------------\r\n    # 如果提示命令不存在，那么安装crontab：\r\n    # CentOS系统：\r\n    yum update\r\n    yum install -y crond\r\n    # Debian/Ubuntu系统：\r\n    apt-get update\r\n    apt-get install -y cron\r\n\r\n安装并打开 crontab 后，我们根据需求添加下面的代码，添加后我们按 `ESC键` 退出编辑模式，然后输入 `:wq` 保存并退出。\r\n\r\n    # 添加定时重启任务\r\n    # 是添加到 crontab -e 文本编辑框内，而不是让你执行！\r\n    # 下面代码前面的 * * * * * 分别对应：分钟 小时 日 月 星期\r\n     \r\n    10 2 * * * /etc/init.d/ssr restart\r\n    # 这个代表 每天2点10分重启一次 ShadowsocksR\r\n     \r\n    10 2 */2 * * /etc/init.d/ssr restart\r\n    # 这个代表 每隔2天的2点10分重启一次 ShadowsocksR\r\n     \r\n    10 */4 * * * /etc/init.d/ssr restart\r\n    # 这个代表 每隔4小时的第10分重启一次 ShadowsocksR\r\n\r\n\u003e 本文删减改自：[逗比根据地][4]\r\n\r\n\r\n  [1]: https://www.91yun.co/wp-content/plugins/91yun-serverspeeder/systemlist.html\r\n  [2]: http://freeapi.ipip.net/8.8.8.8\r\n  [3]: http://freeapi.ipip.net/8.8.8.8\r\n  [4]: https://doub.io/ss-jc60/","cover":"https://i.loli.net/2018/03/22/5ab3765fd17b5.png","link":"shadowsocksr mudbjson模式多用户一键脚本 支持流量限制等.html","preview":"\u003cp\u003e很多人购买VPS后搭建ShadowsocksR服务端，只是几个人分享使用（比如合租），想要限制使用流量，但是又不想搭建网站面板来管理(数据库版多用户)，那么在服务器少的情况，可以使用 ShadowsocksR多用户的 mudbjson模式来建立本地数据库（就是数据记录在JSON文件中），同样可以实现简单的用户管理（限速 限流量），当然这个功能仅对当前服务器有效，不能多个服务器互联！\u003c/p\u003e\n","title":"ShadowsocksR MudbJSON模式多用户一键脚本 支持流量限制等"},{"content":"\r\n\r\n真正的爱情，不是一见钟情，而是日久生情；真正的缘份，不是上天的安排，而是你的主动；真正的自卑，不是你不优秀，而是你把她想得太优秀；真正的关心，不是你认为好的就要求她改变，而是她的改变你是第一个发现的；真正的矛盾，不是她不理解你，而是你不会宽容她。\r\n\r\n我们一直觉得妥协一些、将就一些、容忍一些可以得到幸福。但当你的底线放得越低，你得到的就是更低的那个结果！不是吗？\r\n\r\n不要因为寂寞爱错人，更不要因为爱错人而寂寞一生，尝试信任才能得到幸福。缘分是本书，翻的不经意会错过，读得太认真会泪流。女人会记得让她笑的男人，男人会记得让他哭的女人，可是女人总是留在让她哭的男人身边，男人却留在让他笑的女人身边。\r\n\r\n多少人在说，我会等你，等你回心转意的那一天；我会等你，等你愿意和我在一起的那一天；我会等你，等你离开那个人来到我身边的那一天；我会等你，等你……然而人们可曾知道，世上的爱情，没有几份真的经得起等待！\r\n\r\n这个世界上最残忍的一句话，不是对不起，也不是我恨你，而是，我们再也回不去。就是这样再简单不过的一句话，生生的将两个原本亲密的人隔为疏离。 没有经历过的人，永远都不会明白，那是怎样的一种切肤之痛。\r\n\r\n最宝贵的东西不是你拥有的物质，而是陪伴在你身边的人。不能强迫别人来爱自己，只能努力让自己成为值得爱的人，其余的事情则靠缘分。\r\n\r\n爱总是会使我们有太多期许：希望长久，希望不会分别，希望占有和实现。而最终只是觉得有些许厌倦，不知道该往哪里去。爱情就是这样，有些人会慢慢遗落在岁月的风尘里，哭过，笑过，吵过，闹过，再恋恋不舍也都只是曾经。\r\n\r\n世界上最动人的情话，不是“我爱你”，而是在我需要的时候，你说“ I'll be there ” 。\r\n\r\n每一个不敢再爱的女人，一定很深的爱过。看起来好象百毒不侵，其实早已百毒侵身。\r\n\r\n女人好比梨，外甜内酸。吃梨的人不知道梨的心是酸的，因为吃到最后就把心扔了，所以男人从来不懂女人的心。男人就好比洋葱，想要看到男人的心就需要一层一层去剥！但在剥的过程中你会不断流泪，剥到最后你才知道洋葱是没心的。\r\n\r\n爱情里最忌讳的是：两人都幻想着彼此的未来，却也总惦记着对方的过去。\r\n\r\n明明说着看开了，放下了，每次却总是不自觉的想起那个给与温暖的人。每每又总是在微笑沉醉时看到了现实，想到了伤痛，然后，冷的感觉再也暖和不起来了 。 如此反复，心，终于累了，现实就是这样。我曾经醉过，却又最终醒来，我正在行走，却找不到方向。\r\n\r\n我想给你幸福，却走不进你的世界 。我想用我的全世界来换取一张通往你的世界的入场券，不过，那只不过是我的一厢情愿而已。我的世界，你不在乎；你的世界，我被驱逐。我真的喜欢你，闭上眼，以为我能忘记，但流下的眼泪，却没有骗到自己。\r\n\r\n道歉并不总意味着你是错的，而对方是正确的。有时它只是意味着相对自我而言，你更珍惜你们之间的关系。\r\n\r\n有些伤痕，划在手上，愈合后就成了往事；有些伤痕，划在心上，那怕划得很轻，也会留驻于心；有些人，近在咫尺，却是一生无缘。生命中，似乎总有一种承受不住的痛。有些遗憾，注定了要背负一辈子；生命中，总有一些精美的情感瓷器在我们身边跌碎，然而那裂痕却留在了岁暮回首时的刹那。\r\n\r\n 1. 一个人炫耀什么，说明内心缺少什么。一个人越在意的地方，就是最令他自卑的地方。\r\n 2. 有些人越越想得到的，就越是装作无所谓；越怕失去的，就越是装作不在乎。\r\n 3. 人越是得意的事情，越爱隐藏；越是痛苦的事情，越爱小题大作。\r\n 4. 憎恨某人，优点被看成伪装；喜欢某人，缺点也变得美好。\r\n\r\n有时候，同样的一件事情，我们可以去安慰别人，却说服不了自己。\r\n\r\n热恋时爱情，可以什么都不在乎。只要你要，只要我有，因为我爱你，所以我愿意。一旦感情平复了下来，心中就会出现接连不断的计较，为什么我付出的比你多；为什么我什么都可以给你，你却要有所隐瞒，然后冷战，争吵，分手，和好，冷战 …… 走得过的就是执子之手，走不过的就只能缅怀当初。\r\n\r\n在爱情没开始以前，你永远想象不出会那样地爱一个人；在爱情没结束以前，你永远想象不出那样的爱也会消失；在爱情被忘却以前，你永远想象不出那样刻骨铭心的爱也会只留淡淡痕迹；在爱情重新开始以前，你永远想象不出还能再一次找到那样的爱情。\r\n\r\n有些人一直没机会见，等有机会见了，却又犹豫了。有些事一直没机会做，等有机会了，却不想再做了。有些话埋藏在心中好久，没机会说，等有机会说的时候，却说不出口了。有些爱一直没机会爱，等有机会了，已经不爱了。有些话有很多机会说的，却想着以后再说，要说的时候，却已经没机会了。\r\n\r\n也许你没有貌，但你有才；也许你没有才，但你温柔；也许你没有温柔，但你…… 也许你什么都没有，但是也许，他/她正爱着你的平凡。\r\n\r\n时间会告诉你一切真相。有些事情，要等到你渐渐清醒了，才明白它是个错误；有些东西，要等到你真正放下了，才知道它的沉重。\r\n\r\n能牵手的时候，请别肩并肩；能拥抱的时候，请别手牵手。能相爱的时候，请别说分开；拥有了爱情，请别去碰暧昧。\r\n\r\n男人对女人的伤害，不一定是他爱上了别人，而是他在她有所期待的时候让她失望，在她脆弱的时候没有给她应有的安慰。\r\n\r\n世界没有悲剧和喜剧之分，如果你能从悲剧中走出来，那就是喜剧；如果你沉缅于喜剧之中，那它就是悲剧。如果你只是等待，发生的事情只会是你变老了。人生的意义不在于拿一手好牌，而在于打好一手坏牌。\r\n\r\n如果彼此出现早一点，也许就不会和另一个人十指紧扣。又或者相遇的再晚一点，晚到两个人在各自的爱情经历中慢慢地学会了包容与体谅，善待和妥协，也许走到一起的时候，就不会那么轻易的放弃，任性地转身，放走了爱情。但时间不会回头，爱情岂能“如果”？\r\n\r\n人最软弱的地方，是舍不得。\r\n\r\n舍不得一段不再精采的感情，舍不得一份虚荣，舍不得掌声。我们永远以为最好的日子是会很长很长的，不必那么快离开。就在我们心软和缺乏勇气的时候，最好的日子毫不留情地逝去了。\r\n\r\n有时候，你等的不是事情，机会，或是谁，你等的是时间。等时间，让自己忘记，等时间，让自己改变，放弃便是得到，forget-it=for-get-it。\r\n\r\n喜欢一个人是一种感觉，不喜欢一个人却是事实。事实容易解释，感觉却难以言喻。\r\n通常，每一个内心强大的女人背后都有一个让她成长的男人，一段让她大彻大悟的感情经历，一个把自己逼到绝境最后又重生的蜕变过程。一个拥有强大内心的女人，平时并非是强势的咄咄逼人的，相反她可能是温柔的，微笑地，韧性的，不紧不慢的，沉着而淡定的。\r\n\r\n喜欢你的人，要你的现在；爱你的人，要你的未来。\r\n不要站在旁边羡慕他人的幸福，其实自己的幸福一直都在你身边。只要你还有生命，还有能创造奇迹的双手，你就没有理由当过客、当旁观者，更没有理由抱怨生活。因为只要努力，幸福伸手就可以够得着。\r\n往往喜欢一个人的时候，不需要任何理由；不喜欢一个人的时候，却拥有很多借口。\r\n\r\n假如你想要一件东西，就放它走。它若能回来找你，就永远属于你；它若不回来，那根本就不是你的。\r\n\r\n最佳的报复不是仇恨，而是打心底发出的冷淡，干嘛花力气去恨一个不相干的人。\r\n\r\n如果不幸福，如果不快乐，那就放手吧；如果舍不得，如果放不下，那就痛苦吧。我现在才知道，不了解一个人，还可以爱他；我现在才了解，不爱一个人，还可以思念他；有些人不经意出现，意外的给你惊喜。曾以为他是你生命中的神，可以拯救心灵的干渴，其实错了，有些人注定只是人生里匆匆行走的过客。\r\n\r\n你最爱的，往往没有选择你；最爱你的，往往不是你最爱的；而最长久的，偏偏不是你最爱也不是最爱你的，只是在最适合的时间出现的那个人。\r\n\r\n我尽可能不去缅怀往事，因为来时的路不可能回头。我当心的去爱别人，因为比较不会泛滥。我爱哭的时候便哭，想笑的时候便笑，只要这一切出于自然。我不求深刻，只求简单。\r\n\r\n如果一个男人真的爱你，他不会冷落你超过三天，因为想念你的日子很难过；如果一个男人真的爱你，他会觉得你是最好的，不会将你和其他女人比较，即便你并不优秀；如果一个男人真的爱你，他会时时想着让你开心，不会让你流泪；如果一个男人真的爱你，他会默默地付出一切，但很少让你知道他所做的牺牲。\r\n\r\n你要相信，有一个人正向你走来，他会带给你最美丽的爱情。你要做的只是在那个人出现之前，好好的照顾自己。伤心并没有用，如何让自己好好地生活才最重要。爱情虽美，却不是生活的全部：天长地久，海枯石烂的爱情微乎其微；相濡以沫，白头偕老的婚姻却随处可见。离去的是注定今生错过；属于你的，一定在某一个地方等着你的出现。\r\n遇到你真正爱的人时：要努力争取和他相伴一生的机会，因为当他离去时，一切都来不及了；遇到可相信的朋友时：要好好和他相处下去，因为在人的一生中，可遇到知己真的不易；遇到曾经爱过的人时：记得微笑，因为他是让你更懂爱的人。\r\n\r\n人最悲哀的，并不是昨天失去得太多，而是沉浸于昨天的悲哀之中。人最愚蠢的，并不是没有发现眼前的陷阱，而是第二次又掉了进去。人最寂寞的，并不是想等的人还没有来，而是这个人已从心里走了出去。\r\n\r\n小时候，希望自己快点长大，长大了，却发现遗失了童年；单身时，开始羡慕恋人的甜蜜，恋爱时，怀念单身时的自由。很多事物，没有得到时总觉得美好，得到之后才开始明白：我们得到的同时也是在失去。\r\n\r\n忘记一个人，并非不再想起，而是偶尔想起，心中却不再有波澜。真正的忘记，是不需要努力的。\r\n节日会让幸福的人更幸福，孤独的人更孤独。\r\n\r\n人生短短数十载，最要紧的是满足自己，不是讨好他人；每个人总有不愿意公开的秘密，千万不要苦苦相逼；无论怎么样，一个人借故堕落总是不值得原谅的，越是没有人爱，越要爱自己。\r\n\r\n爱一个女孩子，与其为了她的幸福而放弃她，不如留住她，为她的幸福而努力。\r\n\r\n维系一段感情的，不是坦白，而是考虑到对方的感受，有所保留。\r\n\r\n明白的人懂得放弃，真情的人懂得牺牲，幸福的人懂得超脱。对不爱自己的人，最需要的是理解，放弃和祝福，过多的自作多情是在乞求对方的施舍。爱与被爱，都是让人幸福的事情，不要让这些变成痛苦。\r\n\r\n我们常常看到的风景是：一个人总是仰望和羡慕着别人的幸福，一回头，却发现自己正被仰望和羡慕着。其实，每个人都是幸福的。只是，你的幸福，常常在别人眼里。爱情这东西，时间很关键，认识得太早或太晚，都不行。\r\n\r\n有时候，面对着身边的人，突然觉得说不出话。有时候，曾经一直坚持的东西一夜间面目全非。有时候，想放纵自己，希望自己痛痛快快歇斯底里地发一次疯。有时候，别人突然对你说，我觉得你变了，然后自己开始百感交集。有时候，觉得自己拥有着整个世界，一瞬间却又觉得自己其实一无所有……\r\n\r\nThe supreme happiness of life is the conviction that we are loved。 —— 生活中最大的幸福就是，坚信有人爱着我们。\r\n\r\n当明天变成了今天成为了昨天，最后成为记忆里不再重要的某一天，我们突然发现自己在不知不觉中已被时间推着向前走，这不是静止火车里，与相邻列车交错时，仿佛自己在前进的错觉，而是我们真实的在成长，在这件事里成了另一个自己。\r\n\r\n一生至少该有一次，为了某个人而忘了自己，不求有结果，不求同行，不求曾经拥有，甚至不求你爱我，只求在我最美的年华里，遇到你。”——徐志摩\r\n\r\n在你根本不知道我存在的情況下，我其實已經從頭到尾、完整的、愛過你十遍了…… (( 康永 – 給未知戀人的愛情短信 ))\r\n\r\nOne day someone will walk into your life， then you realize love was always worth waiting for。 有一天那个人走进了你的生命，你就会明白，真爱总是值得等待的。\r\n\r\n你遇上一个人，你爱他多一点，那么，你始终会失去他。然后，你遇上另一个，他爱你多一点，那么，你早晚会离开他。直到一天，你遇到一个人，你们彼此相爱。终于你明白，所有的寻觅，也有一个过程。从前在天涯，而今咫尺。——张小娴\r\n\r\n让你哭到撕心裂肺的那个人，是你最爱的人；让你笑到没心没肺的那个人，是最爱你的人。\r\n\r\n有些人不能在一起，可他们的心在一起；\r\n有些人表面上在一起，心却无法在一起；\r\n有些人从没想过要在一起，却自然而然地在一起；\r\n有些人千辛万苦地终于在一起了，却发现他们并不适合在一起。\r\n\r\n就算最后，我们没有在一起，至少爱，还是会在一起。\r\n爱在一起，就在一起！\r\n每天早上醒来，看见你和阳光都在，这就是我想要的未来。","cover":"https://i.loli.net/2018/03/21/5ab2075ee25fc.jpg","link":"人最软弱的地方是舍不得.html","preview":"\u003cp\u003e真正的爱情，不是一见钟情，而是日久生情；真正的缘份，不是上天的安排，而是你的主动；真正的自卑，不是你不优秀，而是你把她想得太优秀；真正的关心，不是你认为好的就要求她改变，而是她的改变你是第一个发现的；真正的矛盾，不是她不理解你，而是你不会宽容她。\u003c/p\u003e\n","title":"人最软弱的地方是舍不得"},{"content":"\r\n\r\nTypecho密码保护貌似有点不人性化，我觉得内容保护了就好了，标题就不用保护了，如果多个文章都保护了，标题都一样都不知道哪个是要找的文章了。\r\n\r\n## 修改方法 ##\r\n打开Typecho程序目录中的文件`/var/Widget/Abstract/Contents.php`\r\n找到`$value['title'] = _t('此内容被密码保护');`用#注释掉这行，标题就正常显示啦，就这么简单~","cover":"https://i.loli.net/2018/03/22/5ab3796db6706.png","link":"typecho密码保护的文章如何保护内容而不保护标题.html","preview":"\u003cp\u003eTypecho密码保护貌似有点不人性化，我觉得内容保护了就好了，标题就不用保护了，如果多个文章都保护了，标题都一样都不知道哪个是要找的文章了。\u003c/p\u003e\n","title":"Typecho密码保护的文章如何保护内容而不保护标题"},{"content":"\r\n\r\n锐速(ServerSpeeder)可以说是LotServer的马甲，是针对民用的，而LotServer则是针对企业用户的，锐速现在基本上已经关了，而这个LotServer还在持续运营。\r\n\r\n\u003e **声明：**本锐速(lotserver)仅为个人测试程序及提速效果使用，如有商业用途请购买正版！\r\n\r\n**Only for Linux.**\r\n\r\n**从根本原因上解决锐速断流问题，断流的根本原因是没有完整破解验证机制。**\r\n\r\n - 支持自动检测公网网卡，多个网卡也能区分。\r\n - 支持自动适配内核 (需锐速支持)。\r\n - 添加询问是否开启accppp功能 (实测并开启后没有效果)。\r\n - 默认设置为G口宽带 (听说设置大点可以提高速度)。\r\n - 支持一键完全卸载 (此脚本安装的无残留)。\r\n - **所需文件均来自 [GiuHub][1]，不放心可自行查阅 (完全公开)。**\r\n - 不支持自动更换内核，请自行更换(网上教程非常多)。\r\n - **不支持OpenVZ，不需要尝试，会告诉你找不到网卡。**\r\n\r\n\u003e 注意：OVZ虚拟化的VPS并不支持锐速加速器的安装，KVM和XEN应该基本都可以。\r\n\r\n作者博客：https://moeclub.org/2017/03/08/14/\r\n\r\n安装文件 **appex.zip** 为 LotServer 的，(感谢 LotServer 提供安装文件)。\r\n\r\n使用前请日常 `apt-get update` / `yum update` ，欢迎反馈bug(各种安装错误)。\r\n\r\n使用前建议先查看[linux支持内核列表][2]，对照一下系统和内核是否可以安装 LotServer！\r\n\r\n服务器使用`uname -r`命令来查询内核版本，例如返回的是`3.2.0-4-amd64`，`3.2.0-4-amd64`就是你的内核版本。\r\n\r\n\u003e 强烈推荐大家使用 Debian7 x64系统 | 3.2.0-4-amd64内核 ，这个系统和内核无论是锐速、Lotserver还是BBR，除了配置太低的我都没安装失败过！\r\n\r\n## 安装LotServer ##\r\n\r\n    wget --no-check-certificate -qO /tmp/appex.sh \"https://raw.githubusercontent.com/0oVicero0/serverSpeeder_Install/master/appex.sh\" \u0026\u0026 bash /tmp/appex.sh 'install'\r\n\r\n安装一开始的时候，会提示：\r\n\r\n    Press Enter to Continue...\r\n    # 这个是提示你按回车键继续\r\n\r\n如果安装过程中没问题的话，最后会提示：\r\n\r\n    Accelerate VPN (PPTP,L2TP,etc.)? [n]:\r\n    # 是否加速VPN\r\n     \r\n    Auto load ServerSpeeder on linux start-up? [y]:\r\n    # 是否开机启动\r\n     \r\n    Run ServerSpeeder now? [y]:\r\n    # 是否现在启动锐速\r\n     \r\n    # 全部默认回车即可。\r\n\r\n最后出现这样的提示就说明安装并启动成功：\r\n\r\n    [Running Status]\r\n    ServerSpeeder is running!\r\n    version              3.11.20.4\r\n     \r\n    [License Information]\r\n    License              6001ADDF578B6C0E (valid on current device)\r\n    MaxSession           unlimited\r\n    MaxTcpAccSession     unlimited\r\n    MaxBandwidth(kbps)   1024000\r\n    ExpireDate           2035-12-31\r\n    ....\r\n    # 以下省略....\r\n\r\n## 卸载LotServer ##\r\n\r\n    wget --no-check-certificate -qO /tmp/appex.sh \"https://raw.githubusercontent.com/0oVicero0/serverSpeeder_Install/master/appex.sh\" \u0026\u0026 bash /tmp/appex.sh 'uninstall'\r\n\r\n## 使用说明 ##\r\n\r\n    /appex/bin/serverSpeeder.sh start\r\n    # 启动 LotServer\r\n     \r\n    /appex/bin/serverSpeeder.sh stop\r\n    # 停止 LotServer\r\n     \r\n    /appex/bin/serverSpeeder.sh restart\r\n    # 重启 LotServer\r\n     \r\n    /appex/bin/serverSpeeder.sh status\r\n    # 状态查询\r\n     \r\n    /appex/bin/serverSpeeder.sh renewLic\r\n    # 更新许可\r\n\r\n - 代码托管地址：https://github.com/0oVicero0/serverSpeeser_Install\r\n - LotServer 完整使用介绍 PDF手册：https://github.com/0oVicero0/serverSpeeder_Install/blob/master/lotServer.pdf\r\n\r\n## 配置优化 ##\r\n打开配置文件：`/appex/etc/config`\r\n一些人看到上面几十个参数会很方，不要怕，**大部分参数都是不需要改动的，我们主要修改下面这几个参数即可，其他的参数不用管。**\r\n\r\n    acc=\"1\"\r\n    advacc=\"1\"\r\n    advinacc=\"1\"\r\n    wankbps=\"1000000\"\r\n    waninkbps=\"1000000\"\r\n    # 这两个参数代表加速宽带为 1Gbps，再加个 0 就是10Gbps了\r\n    shaperEnable=\"1\"\r\n    maxmode=\"1\"\r\n    initialCwndWan=\"44\"\r\n    # 这个参数请根据回程延迟修改\r\n\r\n`initialCwndWan` 参数请根据你与VPS的连接延迟(回程，VPS连接你的延迟)，**比如 110ms，那么 110/2.5=44，即值为 44** ，自己根据延迟调整。\r\n\r\n\u003e 注意，当你不清楚某些参数该如何修改的时候，请不要修改，避免降低加速效果等情况。\r\n\r\n**修改配置文件后需要重启锐速才能生效：**`/appex/bin/serverSpeeder.sh restart`\r\n\r\n这个LotServer与锐速(ServerSpeeder)的加速区别并不大，不过91yun的破解版因为破解不完整导致会出现断流等情况，而这个 LotServer 则没有这种问题。\r\n\r\n## 其他问题 ##\r\n\r\n**提示错误：I can not find the server pubilc Ethernet!**\r\n\r\n出现这个错误说明你的系统没有安装 ifconfig ，这导致了 脚本无法获取网卡绑定的IP，一般是CentOS 7系统出现这个问题，安装这个工具后重新执行脚本即可。\r\n\r\n    yum -y install net-tools\r\n\r\n\u003e 本文转载自：https://doub.io/wlzy-21/\r\n\r\n\r\n  [1]: https://github.com/0oVicero0/serverSpeeder_Install\r\n  [2]: https://github.com/0oVicero0/serverSpeeder_kernel/blob/master/serverSpeeder.txt","cover":"https://i.loli.net/2018/03/22/5ab378623904b.png","link":"linux tcp加速工具 —— lotserver(锐速母公司) 一键安装脚本.html","preview":"\u003cp\u003e锐速(ServerSpeeder)可以说是LotServer的马甲，是针对民用的，而LotServer则是针对企业用户的，锐速现在基本上已经关了，而这个LotServer还在持续运营。\u003c/p\u003e\n","title":"Linux TCP加速工具 —— LotServer(锐速母公司) 一键安装脚本"},{"content":"\r\n\r\n## 简介 ##\r\n新写的一个 V2ray 的管理面板，方便管理自己的 V2ray 服务器，让小白也能轻松享受 V2ray 带来的乐趣。特别鸣谢 V2ray 的开发组，为我们带了一款非常棒的代理软件。虽然现在客户端还不是很成熟，但是相信越来来越多的开发者会加入进来，让 V2ray 成为新的代理工具的标杆。\r\n\r\n## 功能 ##\r\n\r\n - 一键 启动 / 停止 / 重启 V2ray 服务端\r\n - 自动随机生成 UUID\r\n - 自助修改端口\r\n - 快速查看服务器连接信息\r\n - 一键下载客户端配置文件（仅限 Xshell）\r\n - 自由更改传输配置：\r\n  - 常规TCP\r\n  - HTTP头部伪装\r\n  - WebSocket流量\r\n  - 常规mKCP流量\r\n  - mKCP 伪装 FaceTime通话流量\r\n  - mKCP 伪装 BT下载流量\r\n  - mKCP 伪装 微信视频通话流量\r\n\r\n**WebSocket不包括Nginx分流，请自行安装Nginx来分流。**\r\n\r\n## 截图\r\n\r\n![1](https://github.com/Moexin/v2ray.fun/raw/master/1.png)\r\n\r\n![2](https://github.com/Moexin/v2ray.fun/raw/master/2.png)\r\n\r\n![3](https://github.com/Moexin/v2ray.fun/raw/master/3.png)\r\n\r\n![4](https://github.com/Moexin/v2ray.fun/raw/master/4.png)\r\n\r\n## 系统要求\r\n\r\n- Debian 7 \r\n- **Debian 8（推荐）**\r\n- Ubuntu 14 \r\n- Ubuntu 16 \r\n- CentOS 7\r\n\r\n**不支持Centos 6**\r\n\r\n## 软件要求\r\n\r\n请使用**Xshell**连接服务器，以获得完美的中文支持以及配置文件下载功能。\r\n\r\n## 安装命令\r\n\r\n    wget -N --no-check-certificate https://raw.githubusercontent.com/Moexin/v2ray.fun/master/install.sh \u0026\u0026 bash install.sh\r\n\r\n## 升级命令\r\n\r\n    wget -N --no-check-certificate https://raw.githubusercontent.com/Moexin/v2ray.fun/master/upgrade.sh \u0026\u0026 bash upgrade.sh \u0026\u0026 rm -rf upgrade.sh\r\n\r\n## 卸载命令\r\n\r\n    wget -N --no-check-certificate https://raw.githubusercontent.com/Moexin/v2ray.fun/master/uninstall.sh \u0026\u0026 bash uninstall.sh\r\n\r\n## 特别说明\r\n\r\n有任何问题或者新功能想法欢迎提交 Issue，我会抽空回答。\r\n\r\n本程序遵循 GPL v3协议发布，请Fork保留源项目地址，谢谢！\r\n\r\n## 感谢\r\n\r\nV2ray : [https://v2ray.com][1]\r\nv2ray.fun的原作者：https://github.com/FunctionClub/v2ray.fun\r\n\r\n  [1]: https://v2ray.com","cover":"https://i.loli.net/2018/03/22/5ab377493d4be.jpg","link":"v2ray.fun - v2ray多功能管理脚本，与世界分享自由.html","preview":"\u003cp\u003e新写的一个 V2ray 的管理面板，方便管理自己的 V2ray 服务器，让小白也能轻松享受 V2ray 带来的乐趣。特别鸣谢 V2ray 的开发组，为我们带了一款非常棒的代理软件。虽然现在客户端还不是很成熟，但是相信越来来越多的开发者会加入进来，让 V2ray 成为新的代理工具的标杆。\u003c/p\u003e\n","title":"V2Ray.fun - V2Ray多功能管理脚本，与世界分享自由"},{"content":"\r\n\r\n一个ShadowsocksR多用户管理Shell脚本（基于官方mujson版本），集成SSR多用户管理，流量限制，加密更改等基本操作。是一个基于ShadowsocksR官方的mujson的辅助脚本。方便用户操作。\r\n\r\n## 系统支持 ##\r\n\r\n - Ubuntu 14\r\n - Ubuntu 16\r\n - Debian 7\r\n - Debian 8\r\n - CentOS 6\r\n - CentOS 7\r\n\r\n## 功能 ##\r\n\r\n - 一键开启、关闭SSR服务\r\n - 添加、删除、修改用户端口和密码\r\n - 自由限制用户端口流量使用\r\n - 自动修改防火墙规则\r\n - 自助修改SSR加密方式、协议、混淆等参数\r\n - 自动统计，方便查询每个用户端口的流量使用情况\r\n - 自动安装Libsodium库以支持Chacha20等加密方式\r\n\r\n## 缺点 ##\r\n\r\n - 无法删除最后一名用户（官方限制）\r\n\r\n## 安装 ##\r\n###CentOS系列\r\n\r\n    yum update -y \u0026\u0026 yum install unzip zip -y \u0026\u0026 yum install wget -y \u0026\u0026 wget -N --no-check-certificate https://raw.githubusercontent.com/Moexin/Easy-SSR-Bash-Python-The-Final/master/ssr.zip \u0026\u0026 unzip ssr.zip \u0026\u0026 cd SSR* \u0026\u0026 bash install.sh\r\n\r\n###Debian/Ubuntu系列\r\n\r\n    apt-get update -y \u0026\u0026 apt-get install unzip zip -y \u0026\u0026 apt-get install wget -y \u0026\u0026 wget -N --no-check-certificate https://raw.githubusercontent.com/Moexin/Easy-SSR-Bash-Python-The-Final/master/ssr.zip \u0026\u0026 unzip ssr.zip \u0026\u0026 cd SSR* \u0026\u0026 bash install.sh\r\n\r\n## 卸载 ##\r\n\r\n    cd /root/SSR-Bash-Python-The-Final \u0026\u0026 bash uninstall.sh\r\n\r\n## 自检 ##\r\n\r\n    cd /root/SSR-Bash-Python-The-Final \u0026\u0026 bash self-check.sh\r\n\r\n\r\n\r\n","cover":"https://i.loli.net/2018/03/22/5ab3765fd17b5.png","link":"easy-ssr-bash-python - shadowsoksr多用户管理脚本，轻松添加修改，删除用户.html","preview":"\u003cp\u003e一个ShadowsocksR多用户管理Shell脚本（基于官方mujson版本），集成SSR多用户管理，流量限制，加密更改等基本操作。是一个基于ShadowsocksR官方的mujson的辅助脚本。方便用户操作。\u003c/p\u003e\n","title":"Easy-SSR-Bash-Python - ShadowsoksR多用户管理脚本，轻松添加修改，删除用户"},{"content":"\r\n\r\n## 简介 ##\r\n\r\nBBR相信大家都不陌生，是谷歌开发的一个存在于Linux内核中的拥塞算法。为了优化国内与服务器之间的网络质量，loc的大佬专门魔改改进了下这个BBR，成为了新的BBR魔改版。我也就乘机水一篇文章好了~在Debian 8 和Ubuntu16 + 系统上一键部署魔改版BBR，自动换内核成 4.10.15 ，自动安装Headers。用户只需要将系统安装成 Debian 8 或者 Ubuntu 16 即可，剩下的交给脚本来吧。\r\n\r\n - Github地址:[https://github.com/FunctionClub/YankeeBBR][1]\r\n\r\n![][2]\r\n\r\n## 参考资料 ##\r\n\r\n - 魔改BBR原帖：[http://www.hostloc.com/thread-372277-1-2.html][3]\r\n - 萌新教程: [http://www.hostloc.com/thread-372335-1-1.html][4]\r\n - 脚本技术： [https://doub.io/wlzy-16/][5]\r\n\r\n**部分商家的VPS可能会遇到换内核之后无法启动系统的情况，所以请运行脚本前一定要备份好重要数据！！**\r\n\r\n## 安装使用 ##\r\n\r\n\r\n    wget -N --no-check-certificate https://raw.githubusercontent.com/FunctionClub/YankeeBBR/master/bbr.sh \u0026\u0026 bash bbr.sh install\r\n\r\n安装过程中如果出现这张图片，请选择NO 来删除其他内核：\r\n![][6]\r\n\r\n - 然后根据提示重启系统。\r\n - 重启完成后，运行\r\n\r\n```\r\nbash bbr.sh start\r\n```\r\n\r\n即可启动魔改版BBR。\r\n\r\n## 查看魔改BBR状态 ##\r\n\r\n\r\n    sysctl net.ipv4.tcp_available_congestion_control\r\n\r\n如果看到有 tsunami 就表示开启成功！\r\n\r\n![][7]\r\n\r\n\u003e 本文删减改自：\r\n\u003e [https://ylws.me/tech/68.html][8]\r\n\r\n\r\n  [1]: https://github.com/FunctionClub/YankeeBBR\r\n  [2]: https://i.loli.net/2017/10/14/59e1f02090574.png\r\n  [3]: http://www.hostloc.com/thread-372277-1-2.html\r\n  [4]: http://www.hostloc.com/thread-372335-1-1.html\r\n  [5]: https://doub.io/wlzy-16/\r\n  [6]: https://i.loli.net/2017/10/14/59e1f04a6d3a3.png\r\n  [7]: https://i.loli.net/2017/10/14/59e1f06ba8c97.png\r\n  [8]: https://ylws.me/tech/68.html","cover":"https://i.loli.net/2017/10/14/59e1ed69aa17a.jpg","link":"魔改版bbr一键安装脚本 for debian8 ubuntu16 +.html","preview":"\u003cp\u003eBBR相信大家都不陌生，是谷歌开发的一个存在于Linux内核中的拥塞算法。为了优化国内与服务器之间的网络质量，loc的大佬专门魔改改进了下这个BBR，成为了新的BBR魔改版。我也就乘机水一篇文章好了~在Debian 8 和Ubuntu16 + 系统上一键部署魔改版BBR，自动换内核成 4.10.15 ，自动安装Headers。用户只需要将系统安装成 Debian 8 或者 Ubuntu 16 即可，剩下的交给脚本来吧。\u003c/p\u003e\n","title":"魔改版BBR一键安装脚本 For Debian8 Ubuntu16 +"},{"content":"\r\n\r\n最近，Google 开源了其 TCP BBR 拥塞控制算法，并提交到了 Linux 内核，最新的 4.11 版内核已经用上了该算法。根据以往的传统，Google 总是先在自家的生产环境上线运用后，才会将代码开源，此次也不例外。\r\n根据实地测试，在部署了最新版内核并开启了 TCP BBR 的机器上，网速甚至可以提升好几个数量级。\r\n于是我根据目前三大发行版的最新内核，开发了一键安装最新内核并开启 TCP BBR 脚本。\r\n\r\n![](https://i.loli.net/2017/10/14/59e1ed69aa17a.jpg)\r\n\r\n## 关于本脚本 ##\r\n\r\n1、本脚本已在 Vultr 上的 VPS 全部测试通过。\r\n2、脚本运行完重启发现开不了机的，打开 VPS 后台控制面板的 VNC, 开机卡在 grub 引导, 手动选择内核即可。\r\n3、由于是使用最新版系统内核，最好请勿在生产环境安装，以免产生不可预测之后果。\r\n\r\n## 使用方法 ##\r\n\r\n**OpenVZ 以外的（ KVM 、 Xen 、 VMware 等）**\r\n\r\n    wget --no-check-certificate https://github.com/teddysun/across/raw/master/bbr.sh\r\n    chmod +x bbr.sh\r\n    ./bbr.sh\r\n\r\n**CentOS 6 的 KVM**\r\n\r\n    wget --no-check-certificate https://github.com/52fancy/GooGle-BBR/raw/master/BBR.sh \u0026\u0026 sh BBR.sh\r\n\r\n**OpenVZ 小鸡**\r\n\r\n    wget --no-check-certificate https://raw.githubusercontent.com/mmmwhy/LKL_BBR/master/lkl/install.sh \u0026\u0026 bash install.sh\r\n\r\n安装完成后，脚本会提示需要重启 VPS，重启完成后，进入 VPS，验证一下是否成功安装最新内核并开启 TCP BBR，输入以下命令：\r\n\r\n    sysctl net.ipv4.tcp_available_congestion_control\r\n\r\n返回值一般为：\r\nnet.ipv4.tcp_available_congestion_control = bbr cubic reno\r\n\r\n    sysctl net.ipv4.tcp_congestion_control\r\n\r\n返回值一般为：\r\nnet.ipv4.tcp_congestion_control = bbr\r\n\r\n    sysctl net.core.default_qdisc\r\n\r\n返回值一般为：\r\nnet.core.default_qdisc = fq\r\n\r\n    lsmod | grep bbr\r\n\r\n返回值有 tcp_bbr 模块即说明bbr已启动。\r\n\r\n\r\n","cover":"https://i.loli.net/2017/10/14/59e1ed69aa17a.jpg","link":"一键安装最新内核并开启 bbr 脚本.html","preview":"\u003cp\u003e最近，Google 开源了其 TCP BBR 拥塞控制算法，并提交到了 Linux 内核，最新的 4.11 版内核已经用上了该算法。根据以往的传统，Google 总是先在自家的生产环境上线运用后，才会将代码开源，此次也不例外。根据实地测试，在部署了最新版内核并开启了 TCP BBR 的机器上，网速甚至可以提升好几个数量级。于是我根据目前三大发行版的最新内核，开发了一键安装最新内核并开启 TCP BBR 脚本。\u003c/p\u003e\n","title":"一键安装最新内核并开启 BBR 脚本"},{"content":"\r\n\r\n只有 1kb 大小，直接引入 script 中即可生成，不用配置。代码来源于 [evanyou.me][1] ，仅修改自定义配置部分。\r\n\r\n## 用法： ##\r\n\r\n非常非常的简单\r\n\r\n在\u003cbody\u003e\u003c/body\u003e内插入下面的代码\r\n```html\r\n\u003cscript src=\"dist/ribbon.min.js\"\u003e\u003c/script\u003e\r\n```\r\n## 配置： ##\r\n\r\n - size：彩带的大小，默认值：90。\r\n\r\n - alpha：彩带的不透明度（0〜1），默认值：0.6。\r\n\r\n - zIndex：彩带的堆叠顺序，默认值：-1。\r\n\r\n## 例如： ##\r\n```html\r\n\u003cscript type=\"text/javascript\" size=\"150\" alpha='0.3' zIndex=\"-2\" src=\"dist/ribbon.min.js\"\u003e\u003c/script\u003e\r\n```\r\n## 预览： ##\r\n![][2]\r\n\r\n## 源码： ##\r\n\r\n[https://github.com/hustcc/ribbon.js][3]\r\n\r\n\r\n  [1]: http://evanyou.me\r\n  [2]: https://raw.githubusercontent.com/hustcc/ribbon.js/master/res/screenshot.png\r\n  [3]: https://github.com/hustcc/ribbon.js","cover":"https://raw.githubusercontent.com/hustcc/ribbon.js/master/res/screenshot.png","link":"一个简单炫酷的彩带网页背景效果.html","preview":"\u003cp\u003e只有 1kb 大小，直接引入 script 中即可生成，不用配置。代码来源于 evanyou.me 仅修改自定义配置部分。\u003c/p\u003e\n","title":"一个简单炫酷的彩带网页背景效果"},{"content":"\r\n\r\n![](https://i.loli.net/2017/10/14/59e1dd2b055d7.jpg)\r\n\r\nTypecho程序的伪静态规则不同于WordPress直接默认可用，需要我们手工加载到空间中才可以生效。下面整理了这款程序在不同的主机环境中的伪静态规则，希望对大家有所帮助。\r\n\r\n1、Linux Apache环境(.htaccess)：\r\n\r\n    \u003cIfModule mod_rewrite.c\u003e\r\n    RewriteEngine On\r\n    # 下面是在根目录，文件夹要修改路径\r\n    RewriteBase /\r\n    RewriteCond %{REQUEST_FILENAME} !-f\r\n    RewriteCond %{REQUEST_FILENAME} !-d\r\n    RewriteRule ^(.*)$ /index.php/$1 [L]\r\n    \u003c/IfModule\u003e\r\n\r\n\r\n2、Linux Apache环境（Nginx）：\r\n\r\n    location / {\r\n    index index.html index.php;\r\n    if (-f $request_filename/index.html) {\r\n    rewrite (.*) $1/index.html break;\r\n    }\r\n    if (-f $request_filename/index.php) {\r\n    rewrite (.*) $1/index.php;\r\n    }\r\n    if (!-f $request_filename) {\r\n    rewrite (.*) /index.php;\r\n    }\r\n    }\r\n\r\n3、Windows IIS伪静态(httpd.ini)：\r\n\r\n    [ISAPI_Rewrite]\r\n    # 3600 = 1 hour\r\n    CacheClockRate 3600\r\n    RepeatLimit 32\r\n    # 中文tag解决\r\n    RewriteRule /tag/(.*) /index\\.php\\?tag=$1\r\n    # sitemapxml\r\n    RewriteRule /sitemap.xml /sitemap.xml [L]\r\n    RewriteRule /favicon.ico /favicon.ico [L]\r\n    # 内容页\r\n    RewriteRule /(.*).html /index.php/$1.html [L]\r\n    # 评论\r\n    RewriteRule /(.*)/comment /index.php/$1/comment [L]\r\n    # 分类页\r\n    RewriteRule /category/(.*) /index.php/category/$1 [L]\r\n    # 分页\r\n    RewriteRule /page/(.*) /index.php/page/$1 [L]\r\n    # 搜索页\r\n    RewriteRule /search/(.*) /index.php/search/$1 [L]\r\n    # feed\r\n    RewriteRule /feed/(.*) /index.php/feed/$1 [L]\r\n    # 日期归档\r\n    RewriteRule /2(.*) /index.php/2$1 [L]\r\n    # 上传图片等\r\n    RewriteRule /action(.*) /index.php/action$1 [L]\r\n\r\n","cover":"https://i.loli.net/2017/10/14/59e1dd2b055d7.jpg","link":"typecho程序伪静态规则大全(包括linuxwindows).html","preview":"\u003cp\u003eTypecho程序的伪静态规则不同于WordPress直接默认可用，需要我们手工加载到空间中才可以生效。下面整理了这款程序在不同的主机环境中的伪静态规则，希望对大家有所帮助。\u003c/p\u003e\n","title":"Typecho程序伪静态规则大全(包括Linux/Windows)"}]